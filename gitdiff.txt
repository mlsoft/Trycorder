diff --git a/app/src/main/java/net/ddns/mlsoftlaberge/trycorder/TrycorderFragment.java b/app/src/main/java/net/ddns/mlsoftlaberge/trycorder/TrycorderFragment.java
index 5c5e38c..2221668 100644
--- a/app/src/main/java/net/ddns/mlsoftlaberge/trycorder/TrycorderFragment.java
+++ b/app/src/main/java/net/ddns/mlsoftlaberge/trycorder/TrycorderFragment.java
@@ -15,7 +15,6 @@ import android.hardware.Sensor;
 import android.hardware.SensorEvent;
 import android.hardware.SensorEventListener;
 import android.hardware.SensorManager;
-import android.location.Criteria;
 import android.location.Location;
 import android.location.LocationListener;
 import android.location.LocationManager;
@@ -65,7 +64,7 @@ public class TrycorderFragment extends Fragment
     }
 
     // handles to camera and textureview
-    private Camera mCamera;
+    private Camera mCamera = null;
     private TextureView mViewerWindow;
 
     // handles for the 2 logs pages
@@ -95,6 +94,9 @@ public class TrycorderFragment extends Fragment
     // the new scope class
     private GraSensorView mGraSensorView;
 
+    // the new scope class
+    private TemSensorView mTemSensorView;
+
     // the button to talk to computer
     private ImageButton mTalkButton;
 
@@ -103,7 +105,7 @@ public class TrycorderFragment extends Fragment
 
     // the button to stop it all
     private Button mStopButton;
-    private boolean mRunStatus=false;
+    private boolean mRunStatus = false;
 
     // the button for settings
     private Button mSettingsButton;
@@ -129,8 +131,9 @@ public class TrycorderFragment extends Fragment
     private Button mMagneticButton;
     private Button mOrientationButton;
     private Button mGravityButton;
+    private Button mTemperatureButton;
     private Button mSensoroffButton;
-    private int mSensormode=0;
+    private int mSensormode = 0;
 
     // the button to open a channel
     private Button mCommButton;
@@ -155,17 +158,20 @@ public class TrycorderFragment extends Fragment
     // the button to control the viewer
     private Button mViewerButton;
     private Button mViewerOnButton;
+    private Button mViewerFrontButton;
     private Button mViewerOffButton;
-    private boolean mVieweron;
-    private int mViewermode=0;
+    private boolean mVieweron = false;
+    private boolean mViewerfront = false;
+    private int mViewermode = 0;
 
     private Button mLogsButton;
     private Button mLogsConsoleButton;
     private Button mLogsInfoButton;
+    private Button mLogsPlansButton;
 
     // the button to control sound-effects
     private Button mSoundButton;
-    private boolean mSoundStatus=false;
+    private boolean mSoundStatus = false;
 
     // the layout to put sensorview in
     private LinearLayout mSensorLayout;
@@ -178,22 +184,23 @@ public class TrycorderFragment extends Fragment
     private LinearLayout mSensor2transporterLayout;
     private LinearLayout mSensor2viewerLayout;
     private LinearLayout mSensor2logsLayout;
-    private int mSensor2mode=0;
+    private int mSensor2mode = 0;
 
     private LinearLayout mSensor3Layout;
     private ImageView mFederationlogo;
+    private ImageView mStarshipPlan;
 
     // the player for sound background
-    private MediaPlayer mMediaPlayer=null;
+    private MediaPlayer mMediaPlayer = null;
 
     // the preferences values
-    boolean autoListen;
-    String speakLanguage;
-    String listenLanguage;
-    String displayLanguage;
+    private boolean autoListen;
+    private String speakLanguage;
+    private String listenLanguage;
+    private String displayLanguage;
 
     // the preferences holder
-    SharedPreferences sharedPref;
+    private SharedPreferences sharedPref;
 
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
@@ -202,15 +209,11 @@ public class TrycorderFragment extends Fragment
         PreferenceManager.setDefaultValues(getActivity(), R.xml.preferences, false);
 
         sharedPref = PreferenceManager.getDefaultSharedPreferences(getActivity());
-        autoListen = sharedPref.getBoolean("pref_key_auto_listen",false);
+        autoListen = sharedPref.getBoolean("pref_key_auto_listen", false);
         speakLanguage = sharedPref.getString("pref_key_speak_language", "");
         listenLanguage = sharedPref.getString("pref_key_listen_language", "");
         displayLanguage = sharedPref.getString("pref_key_display_language", "");
 
-        //mSensormode = sharedPref.getInt("pref_key_sensor_mode",0);
-        //mSensor2mode = sharedPref.getInt("pref_key_sensor2_mode",0);
-        //mViewermode = sharedPref.getInt("pref_key_viewer_mode",0);
-
         // ===================== top horizontal button grid ==========================
         // the start button
         mTalkButton = (ImageButton) view.findViewById(R.id.talk_button);
@@ -241,6 +244,15 @@ public class TrycorderFragment extends Fragment
             }
         });
 
+        // the sound-effect button
+        mSoundButton = (Button) view.findViewById(R.id.sound_button);
+        mSoundButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                switchsound();
+            }
+        });
+
         // the settings button
         mSettingsButton = (Button) view.findViewById(R.id.settings_button);
         mSettingsButton.setOnClickListener(new View.OnClickListener() {
@@ -257,6 +269,7 @@ public class TrycorderFragment extends Fragment
         mAskButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
+                buttonsound();
                 snapphoto();
             }
         });
@@ -327,7 +340,7 @@ public class TrycorderFragment extends Fragment
         mOrientationButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                longrangesensor();
+                buttonsound();
                 switchsensorlayout(2);
                 startsensors(2);
             }
@@ -338,12 +351,23 @@ public class TrycorderFragment extends Fragment
         mGravityButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                tractorbeam();
+                buttonsound();
                 switchsensorlayout(3);
                 startsensors(3);
             }
         });
 
+        // the gravity button
+        mTemperatureButton = (Button) view.findViewById(R.id.temperature_button);
+        mTemperatureButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                buttonsound();
+                switchsensorlayout(4);
+                startsensors(4);
+            }
+        });
+
         // the sensoroff button
         mSensoroffButton = (Button) view.findViewById(R.id.sensoroff_button);
         mSensoroffButton.setOnClickListener(new View.OnClickListener() {
@@ -483,7 +507,20 @@ public class TrycorderFragment extends Fragment
             @Override
             public void onClick(View view) {
                 buttonsound();
+                mViewerfront = false;
                 switchviewer(1);
+                switchcam(1);
+            }
+        });
+
+        mViewerFrontButton = (Button) view.findViewById(R.id.viewerfront_button);
+        mViewerFrontButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                buttonsound();
+                mViewerfront = true;
+                switchviewer(1);
+                switchcam(2);
             }
         });
 
@@ -493,6 +530,7 @@ public class TrycorderFragment extends Fragment
             public void onClick(View view) {
                 buttonsound();
                 switchviewer(0);
+                switchcam(0);
             }
         });
 
@@ -525,13 +563,12 @@ public class TrycorderFragment extends Fragment
             }
         });
 
-        // ===================== sound buttons group ============================
-        // the sound-effect button
-        mSoundButton = (Button) view.findViewById(R.id.sound_button);
-        mSoundButton.setOnClickListener(new View.OnClickListener() {
+        mLogsPlansButton = (Button) view.findViewById(R.id.logsplans_button);
+        mLogsPlansButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                switchsound();
+                buttonsound();
+                switchviewer(4);
             }
         });
 
@@ -554,6 +591,7 @@ public class TrycorderFragment extends Fragment
         mFederationlogo = (ImageView) view.findViewById(R.id.federation_logo);
         mLogsConsole = (TextView) view.findViewById(R.id.logs_console);
         mLogsInfo = (TextView) view.findViewById(R.id.logs_info);
+        mStarshipPlan = (ImageView) view.findViewById(R.id.starship_plans);
 
         // create and activate a textureview to contain camera display
         mViewerWindow = (TextureView) view.findViewById(R.id.viewer_window);
@@ -563,7 +601,8 @@ public class TrycorderFragment extends Fragment
         mViewerWindow.setVisibility(View.GONE);
         mLogsConsole.setVisibility(View.GONE);
         mLogsInfo.setVisibility(View.GONE);
-        mVieweron=false;
+        mStarshipPlan.setVisibility(View.GONE);
+        mVieweron = false;
 
         // ==============================================================================
         // create layout params for the created views
@@ -579,19 +618,25 @@ public class TrycorderFragment extends Fragment
         mMagSensorView = new MagSensorView(getContext());
 
         // add my sensorview to the layout 1
-        mSensorLayout.addView(mMagSensorView,tlayoutParams);
+        mSensorLayout.addView(mMagSensorView, tlayoutParams);
 
         // my sensorview that display the sensors data
         mOriSensorView = new OriSensorView(getContext());
 
         // add my sensorview to the layout 1
-        mSensorLayout.addView(mOriSensorView,tlayoutParams);
+        mSensorLayout.addView(mOriSensorView, tlayoutParams);
 
         // my sensorview that display the sensors data
         mGraSensorView = new GraSensorView(getContext());
 
         // add my sensorview to the layout 1
-        mSensorLayout.addView(mGraSensorView,tlayoutParams);
+        mSensorLayout.addView(mGraSensorView, tlayoutParams);
+
+        // my sensorview that display the sensors data
+        mTemSensorView = new TemSensorView(getContext());
+
+        // add my sensorview to the layout 1
+        mSensorLayout.addView(mTemSensorView, tlayoutParams);
 
         // set the sensors invisible
         //switchsensorlayout(0);
@@ -608,10 +653,10 @@ public class TrycorderFragment extends Fragment
         }
         // Define the criteria how to select the locatioin provider -> use
         // default
-        Location location=null;
+        Location location = null;
         //Criteria criteria = new Criteria();
         //locationProvider = locationManager.getBestProvider(criteria, false);
-        locationProvider="gps";
+        locationProvider = "gps";
         try {
             location = locationManager.getLastKnownLocation(locationProvider);
         } catch (SecurityException e) {
@@ -643,10 +688,10 @@ public class TrycorderFragment extends Fragment
         mSpeechRecognizerIntent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
         mSpeechRecognizerIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
         mSpeechRecognizerIntent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, "net.ddns.mlsoftlaberge.mlsoft");
-        mSpeechRecognizerIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS,5);
-        mSpeechRecognizerIntent.putExtra(RecognizerIntent.EXTRA_PREFER_OFFLINE,false);
-        mSpeechRecognizerIntent.putExtra(RecognizerIntent.EXTRA_SPEECH_INPUT_COMPLETE_SILENCE_LENGTH_MILLIS,5000);
-        mSpeechRecognizerIntent.putExtra(RecognizerIntent.EXTRA_SPEECH_INPUT_MINIMUM_LENGTH_MILLIS,500);
+        mSpeechRecognizerIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, 5);
+        mSpeechRecognizerIntent.putExtra(RecognizerIntent.EXTRA_PREFER_OFFLINE, false);
+        mSpeechRecognizerIntent.putExtra(RecognizerIntent.EXTRA_SPEECH_INPUT_COMPLETE_SILENCE_LENGTH_MILLIS, 5000);
+        mSpeechRecognizerIntent.putExtra(RecognizerIntent.EXTRA_SPEECH_INPUT_MINIMUM_LENGTH_MILLIS, 500);
         //mAudioManager.setStreamSolo(AudioManager.STREAM_VOICE_CALL, false);
 
         return view;
@@ -655,9 +700,9 @@ public class TrycorderFragment extends Fragment
     @Override
     public void onActivityCreated(Bundle bundle) {
         super.onActivityCreated(bundle);
-        Typeface face = Typeface.createFromAsset(getActivity().getAssets(),"sonysketchef.ttf");
-        Typeface face2 = Typeface.createFromAsset(getActivity().getAssets(),"finalold.ttf");
-        Typeface face3 = Typeface.createFromAsset(getActivity().getAssets(),"finalnew.ttf");
+        Typeface face = Typeface.createFromAsset(getActivity().getAssets(), "sonysketchef.ttf");
+        Typeface face2 = Typeface.createFromAsset(getActivity().getAssets(), "finalold.ttf");
+        Typeface face3 = Typeface.createFromAsset(getActivity().getAssets(), "finalnew.ttf");
         // status fields
         mTextstatus_top.setTypeface(face);
         mTextstatus_bottom.setTypeface(face);
@@ -668,6 +713,7 @@ public class TrycorderFragment extends Fragment
         // top buttons
         mStartButton.setTypeface(face2);
         mStopButton.setTypeface(face2);
+        mSoundButton.setTypeface(face2);
         mSettingsButton.setTypeface(face2);
         // left column buttons
         mSensorButton.setTypeface(face2);
@@ -677,34 +723,43 @@ public class TrycorderFragment extends Fragment
         mTransporterButton.setTypeface(face2);
         mViewerButton.setTypeface(face2);
         mLogsButton.setTypeface(face2);
-        mSoundButton.setTypeface(face2);
 
         // center buttons
-        mMagneticButton.setTypeface(face3);
-        mOrientationButton.setTypeface(face3);
-        mGravityButton.setTypeface(face3);
-        mSensoroffButton.setTypeface(face3);
+        mMagneticButton.setTypeface(face);
+        mOrientationButton.setTypeface(face);
+        mGravityButton.setTypeface(face);
+        mTemperatureButton.setTypeface(face);
+        mSensoroffButton.setTypeface(face);
+
         mOpenCommButton.setTypeface(face3);
         mCloseCommButton.setTypeface(face3);
+
         mShieldUpButton.setTypeface(face3);
         mShieldDownButton.setTypeface(face3);
+
         mPhaserButton.setTypeface(face3);
         mTorpedoButton.setTypeface(face3);
+
         mTransportOutButton.setTypeface(face);
         mTransportInButton.setTypeface(face);
-        mViewerOnButton.setTypeface(face3);
-        mViewerOffButton.setTypeface(face3);
-        mLogsConsoleButton.setTypeface(face3);
-        mLogsInfoButton.setTypeface(face3);
+
+        mViewerOnButton.setTypeface(face);
+        mViewerFrontButton.setTypeface(face);
+        mViewerOffButton.setTypeface(face);
+
+        mLogsConsoleButton.setTypeface(face);
+        mLogsInfoButton.setTypeface(face);
+        mLogsPlansButton.setTypeface(face);
     }
 
     @Override
     public void onResume() {
         super.onResume();
-        mSensormode = sharedPref.getInt("pref_key_sensor_mode",0);
-        mSensor2mode = sharedPref.getInt("pref_key_sensor2_mode",0);
-        mViewermode = sharedPref.getInt("pref_key_viewer_mode",0);
-
+        mSensormode = sharedPref.getInt("pref_key_sensor_mode", 0);
+        mSensor2mode = sharedPref.getInt("pref_key_sensor2_mode", 0);
+        mViewermode = sharedPref.getInt("pref_key_viewer_mode", 0);
+        mSoundStatus = sharedPref.getBoolean("pref_key_audio_mode", false);
+        mViewerfront = sharedPref.getBoolean("pref_key_viewer_front", false);
         switchbuttonlayout(mSensor2mode);
         switchsensorlayout(mSensormode);
         startsensors(mSensormode);
@@ -718,6 +773,8 @@ public class TrycorderFragment extends Fragment
         editor.putInt("pref_key_sensor_mode", mSensormode);
         editor.putInt("pref_key_sensor2_mode", mSensor2mode);
         editor.putInt("pref_key_viewer_mode", mViewermode);
+        editor.putBoolean("pref_key_audio_mode", mSoundStatus);
+        editor.putBoolean("pref_key_viewer_front", mViewerfront);
         editor.commit();
         super.onPause();
     }
@@ -725,8 +782,8 @@ public class TrycorderFragment extends Fragment
 
     private void startsensors(int mode) {
         stopsensors();
-        mSensormode=mode;
-        switch(mode) {
+        mSensormode = mode;
+        switch (mode) {
             case 1:
                 say("Sensors Magnetic");
                 startmagsensors();
@@ -739,6 +796,10 @@ public class TrycorderFragment extends Fragment
                 say("Sensors Gravity");
                 startgrasensors();
                 break;
+            case 4:
+                say("Sensors Temperature");
+                starttemsensors();
+                break;
             default:
                 say("Sensors OFF");
                 break;
@@ -749,6 +810,7 @@ public class TrycorderFragment extends Fragment
         stopmagsensors();
         stoporisensors();
         stopgrasensors();
+        stoptemsensors();
     }
 
     // =====================================================================================
@@ -765,7 +827,8 @@ public class TrycorderFragment extends Fragment
         mMagSensorView.setVisibility(View.GONE);
         mOriSensorView.setVisibility(View.GONE);
         mGraSensorView.setVisibility(View.GONE);
-        switch(no) {
+        mTemSensorView.setVisibility(View.GONE);
+        switch (no) {
             case 1:
                 mMagSensorView.setVisibility(View.VISIBLE);
                 break;
@@ -775,6 +838,9 @@ public class TrycorderFragment extends Fragment
             case 3:
                 mGraSensorView.setVisibility(View.VISIBLE);
                 break;
+            case 4:
+                mTemSensorView.setVisibility(View.VISIBLE);
+                break;
         }
     }
 
@@ -788,7 +854,7 @@ public class TrycorderFragment extends Fragment
         mSensor2transporterLayout.setVisibility(View.GONE);
         mSensor2viewerLayout.setVisibility(View.GONE);
         mSensor2logsLayout.setVisibility(View.GONE);
-        switch(no) {
+        switch (no) {
             case 1:
                 say("Sensors Mode");
                 mSensor2sensorLayout.setVisibility(View.VISIBLE);
@@ -818,7 +884,7 @@ public class TrycorderFragment extends Fragment
                 mSensor2logsLayout.setVisibility(View.VISIBLE);
                 break;
         }
-        mSensor2mode=no;
+        mSensor2mode = no;
     }
 
     // =====================================================================================
@@ -897,42 +963,196 @@ public class TrycorderFragment extends Fragment
     // ==========================================================================================
     // start sensor background sound
     private void startmusic() {
-        if(mMediaPlayer==null) {
-            mMediaPlayer = MediaPlayer.create(getActivity().getApplicationContext(), R.raw.tricscan2);
-            mMediaPlayer.setLooping(true);
-            mMediaPlayer.start(); // no need to call prepare(); create() does that for you
+        if (mMediaPlayer == null) {
+            switch (mSensormode) {
+                case 1:
+                    mMediaPlayer = MediaPlayer.create(getActivity().getApplicationContext(), R.raw.tricscan2);
+                    mMediaPlayer.setLooping(true);
+                    mMediaPlayer.start(); // no need to call prepare(); create() does that for you
+                    break;
+                case 2:
+                    mMediaPlayer = MediaPlayer.create(getActivity().getApplicationContext(), R.raw.long_range_scan);
+                    mMediaPlayer.setLooping(true);
+                    mMediaPlayer.start(); // no need to call prepare(); create() does that for you
+                    break;
+                case 3:
+                    mMediaPlayer = MediaPlayer.create(getActivity().getApplicationContext(), R.raw.tng_tractor_clean);
+                    mMediaPlayer.setLooping(true);
+                    mMediaPlayer.start(); // no need to call prepare(); create() does that for you
+                    break;
+                case 4:
+                    mMediaPlayer = MediaPlayer.create(getActivity().getApplicationContext(), R.raw.scan_high);
+                    mMediaPlayer.setLooping(true);
+                    mMediaPlayer.start(); // no need to call prepare(); create() does that for you
+                    break;
+            }
+
         }
+        if (mSensormode != 0)
+            mSoundButton.setBackgroundResource(R.drawable.trekbutton_yellow_center);
     }
 
     // stop the background sound
     private void stopmusic() {
-        if(mMediaPlayer!=null) {
+        if (mMediaPlayer != null) {
             mMediaPlayer.release();
             mMediaPlayer = null;
         }
+        mSoundButton.setBackgroundResource(R.drawable.trekbutton_gray_center);
     }
 
     // switch background sound on/off
     private void switchsound() {
-        if(mSoundStatus) {
-            mSoundStatus=false;
+        if (mSoundStatus) {
+            mSoundStatus = false;
             stopmusic();
-            mSoundButton.setBackgroundResource(R.drawable.trekbutton);
-            //mSoundButton.setBackgroundColor(Color.GRAY);
         } else {
-            mSoundStatus=true;
-            if(mRunStatus) startmusic();
-            mSoundButton.setBackgroundResource(R.drawable.trekbutton_yellow);
-            //mSoundButton.setBackgroundColor(Color.YELLOW);
+            mSoundStatus = true;
+            if (mRunStatus) startmusic();
         }
     }
 
     // ============================================================================
     // stop the sensor updates
+    private void stoptemsensors() {
+        stopmusic();
+        mSensorManager.unregisterListener(mTemSensorView);
+        mRunStatus = false;
+    }
+
+    // here we start the sensor reading
+    private void starttemsensors() {
+        mRunStatus = true;
+        // link a sensor to the sensorview
+        mTemSensorView.resetcount();
+        mSensorManager.registerListener(mTemSensorView,
+                mSensorManager.getDefaultSensor(Sensor.TYPE_AMBIENT_TEMPERATURE),
+                SensorManager.SENSOR_DELAY_FASTEST);
+        if (mSoundStatus) startmusic();
+    }
+
+
+    // ============================================================================
+    // class defining the sensor display widget
+    private class TemSensorView extends TextView implements SensorEventListener {
+
+        private Bitmap mBitmap;
+        private Paint mPaint = new Paint();
+        private Canvas mCanvas = new Canvas();
+        private int mColor[] = new int[3];
+        private float mWidth;
+        private float mHeight;
+        private float mYOffset;
+        private float mScale;
+        private float mSpeed = 0.5f;
+
+        // table of values for the trace
+        private int MAXVALUES = 300;
+        private float mValues[] = new float[MAXVALUES * 3];
+        private int nbValues = 0;
+        private float lastvalue = 0.0f;
+
+        // initialize the 3 colors, and setup painter
+        public TemSensorView(Context context) {
+            super(context);
+            mColor[0] = Color.argb(192, 255, 64, 64);
+            mColor[1] = Color.argb(192, 64, 64, 255);
+            mColor[2] = Color.argb(192, 64, 255, 64);
+            mPaint.setFlags(Paint.ANTI_ALIAS_FLAG);
+            for (int i = 0; i < (MAXVALUES * 3); ++i) {
+                mValues[i] = 0.0f;
+            }
+            nbValues = 0;
+        }
+
+        public void resetcount() {
+            nbValues = 0;
+        }
+
+        // initialize the bitmap to the size of the view, fill it white
+        // init the view state variables to initial values
+        @Override
+        protected void onSizeChanged(int w, int h, int oldw, int oldh) {
+            mBitmap = Bitmap.createBitmap(w, h, Bitmap.Config.RGB_565);
+            mCanvas.setBitmap(mBitmap);
+            mCanvas.drawColor(Color.BLACK);
+            mYOffset = h * 0.5f;
+            mScale = -(h * 0.5f * (1.0f / (SensorManager.MAGNETIC_FIELD_EARTH_MAX)));
+            mWidth = w;
+            mHeight = h;
+            mSpeed = mWidth / MAXVALUES;
+            super.onSizeChanged(w, h, oldw, oldh);
+        }
+
+        // draw
+        @Override
+        public void onDraw(Canvas viewcanvas) {
+            synchronized (this) {
+                if (mBitmap != null) {
+                    // clear the surface
+                    mCanvas.drawColor(Color.BLACK);
+                    // draw middle line horizontal
+                    mPaint.setColor(0xffaaaaaa);
+                    mPaint.setStrokeWidth(1.0f);
+                    mCanvas.drawLine(0, mYOffset, mWidth, mYOffset, mPaint);
+                    mCanvas.drawText("Temp: " + String.valueOf(lastvalue), 0, 32, mPaint);
+
+                    // draw the 100 values x 3 rows
+                    for (int i = 0; i < nbValues - 1; ++i) {
+                        for (int j = 0; j < 3; ++j) {
+                            int k = (j * MAXVALUES) + i;
+                            float oldx = i * mSpeed;
+                            float newx = (i + 1) * mSpeed;
+                            mPaint.setColor(mColor[j]);
+                            mPaint.setStrokeWidth(3.0f);
+                            mCanvas.drawLine(oldx, mValues[k], newx, mValues[k + 1], mPaint);
+                        }
+                    }
+                    // transfer the bitmap to the view
+                    viewcanvas.drawBitmap(mBitmap, 0, 0, null);
+                }
+            }
+            super.onDraw(viewcanvas);
+        }
+
+        // extract sensor data and plot them on view
+        public void onSensorChanged(SensorEvent event) {
+            synchronized (this) {
+                if (mBitmap != null) {
+                    if (event.sensor.getType() == Sensor.TYPE_AMBIENT_TEMPERATURE) {
+                        // scroll left when full
+                        if (nbValues >= MAXVALUES) {
+                            for (int i = 0; i < (MAXVALUES * 3) - 1; ++i) {
+                                mValues[i] = mValues[i + 1];
+                            }
+                            nbValues--;
+                        }
+                        // fill the 3 elements in the table
+                        for (int i = 0; i < 3; ++i) {
+                            final float v = mYOffset + event.values[i] * mScale;
+                            mValues[nbValues + (i * MAXVALUES)] = v;
+                            if (i == 0) lastvalue = v;
+                        }
+                        nbValues++;
+                        invalidate();
+                    }
+                }
+            }
+        }
+
+        public void onAccuracyChanged(Sensor sensor, int accuracy) {
+            // nothing to do
+        }
+
+    }
+
+
+    // ============================================================================
+    // stop the sensor updates
     private void stoporisensors() {
         stopmusic();
         mSensorManager.unregisterListener(mOriSensorView);
-        mRunStatus=false;
+        mRunStatus = false;
         try {
             locationManager.removeUpdates(mOriSensorView);
         } catch (SecurityException e) {
@@ -942,12 +1162,12 @@ public class TrycorderFragment extends Fragment
 
     // here we start the sensor reading
     private void startorisensors() {
-        mRunStatus=true;
+        mRunStatus = true;
         // link a sensor to the sensorview
         mSensorManager.registerListener(mOriSensorView,
                 mSensorManager.getDefaultSensor(Sensor.TYPE_ORIENTATION),
                 SensorManager.SENSOR_DELAY_NORMAL);
-        if(mSoundStatus) startmusic();
+        if (mSoundStatus) startmusic();
         // start gps location updates
         try {
             locationManager.requestLocationUpdates(locationProvider, 400, 1, mOriSensorView);
@@ -959,12 +1179,12 @@ public class TrycorderFragment extends Fragment
 
     // ==========================================================================================
 
-    public class OriSensorView extends TextView implements SensorEventListener , LocationListener {
+    public class OriSensorView extends TextView implements SensorEventListener, LocationListener {
 
         private Paint paint;
         private float position = 0;
 
-        private Location location=null;
+        private Location location = null;
 
         public OriSensorView(Context context) {
             super(context);
@@ -985,10 +1205,10 @@ public class TrycorderFragment extends Fragment
         protected void onDraw(Canvas canvas) {
             int xPoint = getMeasuredWidth() / 2;
             int yPoint = getMeasuredHeight() / 2;
-            if(yPoint>xPoint) {
-                yPoint=xPoint;
+            if (yPoint > xPoint) {
+                yPoint = xPoint;
             } else {
-                xPoint=yPoint;
+                xPoint = yPoint;
             }
 
             float radius = (float) (Math.min(xPoint, yPoint) * 0.9);
@@ -1003,17 +1223,17 @@ public class TrycorderFragment extends Fragment
                     (float) (yPoint - radius
                             * Math.cos((double) (-position) / 180 * 3.1416)), paint);
 
-            canvas.drawText("ORI: "+String.valueOf(position), xPoint*2.0f, yPoint*2.0f-32.0f, paint);
+            canvas.drawText("ORI: " + String.valueOf(position), xPoint * 2.0f, yPoint * 2.0f - 32.0f, paint);
 
             // draw the longitude and latitude
-            if(location!=null) {
+            if (location != null) {
                 float lat = (float) (location.getLatitude());
                 float lng = (float) (location.getLongitude());
-                canvas.drawText("LAT: "+String.valueOf(lat),xPoint*2.0f,32.0f,paint);
-                canvas.drawText("LON: "+String.valueOf(lng),xPoint*2.0f,64.0f,paint);
+                canvas.drawText("LAT: " + String.valueOf(lat), xPoint * 2.0f, 32.0f, paint);
+                canvas.drawText("LON: " + String.valueOf(lng), xPoint * 2.0f, 64.0f, paint);
             } else {
-                canvas.drawText("LAT: "+"Not avalaible",xPoint*2.0f,32.0f,paint);
-                canvas.drawText("LON: "+"Not avalaible",xPoint*2.0f,64.0f,paint);
+                canvas.drawText("LAT: " + "Not avalaible", xPoint * 2.0f, 32.0f, paint);
+                canvas.drawText("LON: " + "Not avalaible", xPoint * 2.0f, 64.0f, paint);
             }
         }
 
@@ -1042,12 +1262,12 @@ public class TrycorderFragment extends Fragment
 
         @Override
         public void onLocationChanged(Location location) {
-            this.location=location;
+            this.location = location;
         }
 
         @Override
         public void onStatusChanged(String provider, int status, Bundle extras) {
-            // TODO Auto-generated method stub
+            say("Location Status changed. " + String.valueOf(status));
         }
 
         @Override
@@ -1069,18 +1289,18 @@ public class TrycorderFragment extends Fragment
     private void stopmagsensors() {
         stopmusic();
         mSensorManager.unregisterListener(mMagSensorView);
-        mRunStatus=false;
+        mRunStatus = false;
     }
 
     // here we start the sensor reading
     private void startmagsensors() {
-        mRunStatus=true;
+        mRunStatus = true;
         // link a sensor to the sensorview
         mMagSensorView.resetcount();
         mSensorManager.registerListener(mMagSensorView,
                 mSensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD),
                 SensorManager.SENSOR_DELAY_FASTEST);
-        if(mSoundStatus) startmusic();
+        if (mSoundStatus) startmusic();
     }
 
     // ============================================================================
@@ -1090,17 +1310,17 @@ public class TrycorderFragment extends Fragment
         private Bitmap mBitmap;
         private Paint mPaint = new Paint();
         private Canvas mCanvas = new Canvas();
-        private int mColor[]=new int[3];
+        private int mColor[] = new int[3];
         private float mWidth;
         private float mHeight;
         private float mYOffset;
         private float mScale;
-        private float mSpeed=0.5f;
+        private float mSpeed = 0.5f;
 
         // table of values for the trace
         private int MAXVALUES = 300;
         private float mValues[] = new float[MAXVALUES * 3];
-        private int nbValues=0;
+        private int nbValues = 0;
 
         // initialize the 3 colors, and setup painter
         public MagSensorView(Context context) {
@@ -1109,15 +1329,16 @@ public class TrycorderFragment extends Fragment
             mColor[1] = Color.argb(192, 64, 64, 255);
             mColor[2] = Color.argb(192, 64, 255, 64);
             mPaint.setFlags(Paint.ANTI_ALIAS_FLAG);
-            for(int i=0; i<(MAXVALUES * 3); ++i) {
-                mValues[i]=0.0f;
+            for (int i = 0; i < (MAXVALUES * 3); ++i) {
+                mValues[i] = 0.0f;
             }
-            nbValues=0;
+            nbValues = 0;
         }
 
         public void resetcount() {
-            nbValues=0;
+            nbValues = 0;
         }
+
         // initialize the bitmap to the size of the view, fill it white
         // init the view state variables to initial values
         @Override
@@ -1129,7 +1350,7 @@ public class TrycorderFragment extends Fragment
             mScale = -(h * 0.5f * (1.0f / (SensorManager.MAGNETIC_FIELD_EARTH_MAX)));
             mWidth = w;
             mHeight = h;
-            mSpeed = mWidth/MAXVALUES;
+            mSpeed = mWidth / MAXVALUES;
             super.onSizeChanged(w, h, oldw, oldh);
         }
 
@@ -1137,7 +1358,7 @@ public class TrycorderFragment extends Fragment
         @Override
         public void onDraw(Canvas viewcanvas) {
             synchronized (this) {
-                if(mBitmap!=null) {
+                if (mBitmap != null) {
                     // clear the surface
                     mCanvas.drawColor(Color.BLACK);
                     // draw middle line horizontal
@@ -1145,18 +1366,18 @@ public class TrycorderFragment extends Fragment
                     mPaint.setStrokeWidth(1.0f);
                     mCanvas.drawLine(0, mYOffset, mWidth, mYOffset, mPaint);
                     // draw the 100 values x 3 rows
-                    for(int i=0; i<nbValues-1;++i) {
-                        for(int j=0; j<3;++j) {
-                            int k=(j*MAXVALUES)+i;
-                            float oldx=i*mSpeed;
-                            float newx=(i+1)*mSpeed;
+                    for (int i = 0; i < nbValues - 1; ++i) {
+                        for (int j = 0; j < 3; ++j) {
+                            int k = (j * MAXVALUES) + i;
+                            float oldx = i * mSpeed;
+                            float newx = (i + 1) * mSpeed;
                             mPaint.setColor(mColor[j]);
                             mPaint.setStrokeWidth(3.0f);
-                            mCanvas.drawLine(oldx, mValues[k], newx, mValues[k+1], mPaint);
+                            mCanvas.drawLine(oldx, mValues[k], newx, mValues[k + 1], mPaint);
                         }
                     }
                     // transfer the bitmap to the view
-                    viewcanvas.drawBitmap(mBitmap,0,0,null);
+                    viewcanvas.drawBitmap(mBitmap, 0, 0, null);
                 }
             }
             super.onDraw(viewcanvas);
@@ -1166,18 +1387,18 @@ public class TrycorderFragment extends Fragment
         public void onSensorChanged(SensorEvent event) {
             synchronized (this) {
                 if (mBitmap != null) {
-                    if(event.sensor.getType()== Sensor.TYPE_MAGNETIC_FIELD) {
+                    if (event.sensor.getType() == Sensor.TYPE_MAGNETIC_FIELD) {
                         // scroll left when full
-                        if(nbValues>=MAXVALUES) {
-                            for (int i = 0; i < (MAXVALUES * 3)-1; ++i) {
-                                mValues[i] = mValues[i+1];
+                        if (nbValues >= MAXVALUES) {
+                            for (int i = 0; i < (MAXVALUES * 3) - 1; ++i) {
+                                mValues[i] = mValues[i + 1];
                             }
                             nbValues--;
                         }
                         // fill the 3 elements in the table
-                        for(int i=0; i<3; ++i) {
-                            final float v = mYOffset +event.values[i] * mScale;
-                            mValues[nbValues+(i*MAXVALUES)]=v;
+                        for (int i = 0; i < 3; ++i) {
+                            final float v = mYOffset + event.values[i] * mScale;
+                            mValues[nbValues + (i * MAXVALUES)] = v;
                         }
                         nbValues++;
                         invalidate();
@@ -1198,18 +1419,18 @@ public class TrycorderFragment extends Fragment
     private void stopgrasensors() {
         stopmusic();
         mSensorManager.unregisterListener(mGraSensorView);
-        mRunStatus=false;
+        mRunStatus = false;
     }
 
     // here we start the sensor reading
     private void startgrasensors() {
-        mRunStatus=true;
+        mRunStatus = true;
         // link a sensor to the sensorview
         mGraSensorView.resetcount();
         mSensorManager.registerListener(mGraSensorView,
                 mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER),
                 SensorManager.SENSOR_DELAY_FASTEST);
-        if(mSoundStatus) startmusic();
+        if (mSoundStatus) startmusic();
     }
 
     // ============================================================================
@@ -1219,17 +1440,17 @@ public class TrycorderFragment extends Fragment
         private Bitmap mBitmap;
         private Paint mPaint = new Paint();
         private Canvas mCanvas = new Canvas();
-        private int mColor[]=new int[3];
+        private int mColor[] = new int[3];
         private float mWidth;
         private float mHeight;
         private float mYOffset;
         private float mScale;
-        private float mSpeed=0.5f;
+        private float mSpeed = 0.5f;
 
         // table of values for the trace
         private int MAXVALUES = 300;
         private float mValues[] = new float[MAXVALUES * 3];
-        private int nbValues=0;
+        private int nbValues = 0;
 
         // initialize the 3 colors, and setup painter
         public GraSensorView(Context context) {
@@ -1238,15 +1459,16 @@ public class TrycorderFragment extends Fragment
             mColor[1] = Color.argb(192, 64, 64, 255);
             mColor[2] = Color.argb(192, 64, 255, 64);
             mPaint.setFlags(Paint.ANTI_ALIAS_FLAG);
-            for(int i=0; i<(MAXVALUES * 3); ++i) {
-                mValues[i]=0.0f;
+            for (int i = 0; i < (MAXVALUES * 3); ++i) {
+                mValues[i] = 0.0f;
             }
-            nbValues=0;
+            nbValues = 0;
         }
 
         public void resetcount() {
-            nbValues=0;
+            nbValues = 0;
         }
+
         // initialize the bitmap to the size of the view, fill it white
         // init the view state variables to initial values
         @Override
@@ -1258,7 +1480,7 @@ public class TrycorderFragment extends Fragment
             mScale = -(h * 0.5f * (1.0f / (SensorManager.MAGNETIC_FIELD_EARTH_MAX)));
             mWidth = w;
             mHeight = h;
-            mSpeed = mWidth/MAXVALUES;
+            mSpeed = mWidth / MAXVALUES;
             super.onSizeChanged(w, h, oldw, oldh);
         }
 
@@ -1266,7 +1488,7 @@ public class TrycorderFragment extends Fragment
         @Override
         public void onDraw(Canvas viewcanvas) {
             synchronized (this) {
-                if(mBitmap!=null) {
+                if (mBitmap != null) {
                     // clear the surface
                     mCanvas.drawColor(Color.BLACK);
                     // draw middle line horizontal
@@ -1274,18 +1496,18 @@ public class TrycorderFragment extends Fragment
                     mPaint.setStrokeWidth(1.0f);
                     mCanvas.drawLine(0, mYOffset, mWidth, mYOffset, mPaint);
                     // draw the 100 values x 3 rows
-                    for(int i=0; i<nbValues-1;++i) {
-                        for(int j=0; j<3;++j) {
-                            int k=(j*MAXVALUES)+i;
-                            float oldx=i*mSpeed;
-                            float newx=(i+1)*mSpeed;
+                    for (int i = 0; i < nbValues - 1; ++i) {
+                        for (int j = 0; j < 3; ++j) {
+                            int k = (j * MAXVALUES) + i;
+                            float oldx = i * mSpeed;
+                            float newx = (i + 1) * mSpeed;
                             mPaint.setColor(mColor[j]);
                             mPaint.setStrokeWidth(3.0f);
-                            mCanvas.drawLine(oldx, mValues[k], newx, mValues[k+1], mPaint);
+                            mCanvas.drawLine(oldx, mValues[k], newx, mValues[k + 1], mPaint);
                         }
                     }
                     // transfer the bitmap to the view
-                    viewcanvas.drawBitmap(mBitmap,0,0,null);
+                    viewcanvas.drawBitmap(mBitmap, 0, 0, null);
                 }
             }
             super.onDraw(viewcanvas);
@@ -1295,18 +1517,18 @@ public class TrycorderFragment extends Fragment
         public void onSensorChanged(SensorEvent event) {
             synchronized (this) {
                 if (mBitmap != null) {
-                    if(event.sensor.getType()== Sensor.TYPE_ACCELEROMETER) {
+                    if (event.sensor.getType() == Sensor.TYPE_ACCELEROMETER) {
                         // scroll left when full
-                        if(nbValues>=MAXVALUES) {
-                            for (int i = 0; i < (MAXVALUES * 3)-1; ++i) {
-                                mValues[i] = mValues[i+1];
+                        if (nbValues >= MAXVALUES) {
+                            for (int i = 0; i < (MAXVALUES * 3) - 1; ++i) {
+                                mValues[i] = mValues[i + 1];
                             }
                             nbValues--;
                         }
                         // fill the 3 elements in the table
-                        for(int i=0; i<3; ++i) {
-                            final float v = mYOffset +event.values[i] * mScale;
-                            mValues[nbValues+(i*MAXVALUES)]=v;
+                        for (int i = 0; i < 3; ++i) {
+                            final float v = mYOffset + event.values[i] * mScale;
+                            mValues[nbValues + (i * MAXVALUES)] = v;
                         }
                         nbValues++;
                         invalidate();
@@ -1326,17 +1548,35 @@ public class TrycorderFragment extends Fragment
     // functions to listen to the surface texture view
 
     public void onSurfaceTextureAvailable(SurfaceTexture surface, int width, int height) {
-
-        try {
-            mCamera = Camera.open();
-            mCamera.setPreviewTexture(surface);
-            Camera.Parameters parameters = mCamera.getParameters();
-            parameters.set("orientation", "portrait");
-            mCamera.setParameters(parameters);
-            mCamera.setDisplayOrientation(90);
-            mCamera.startPreview();
-        } catch (IOException ioe) {
-            // Something bad happened
+        mCamera = null;
+        if (mViewerfront == false) {
+            try {
+                mCamera = Camera.open();
+                mCamera.setPreviewTexture(surface);
+                Camera.Parameters parameters = mCamera.getParameters();
+                parameters.set("orientation", "portrait");
+                mCamera.setParameters(parameters);
+                mCamera.setDisplayOrientation(90);
+                mCamera.startPreview();
+            } catch (IOException ioe) {
+                say("Something bad happened with camera");
+            } catch (Exception sex) {
+                say("camera permission refused");
+            }
+        } else {
+            try {
+                mCamera = Camera.open(Camera.CameraInfo.CAMERA_FACING_FRONT);
+                mCamera.setPreviewTexture(surface);
+                Camera.Parameters parameters = mCamera.getParameters();
+                parameters.set("orientation", "portrait");
+                mCamera.setParameters(parameters);
+                mCamera.setDisplayOrientation(90);
+                mCamera.startPreview();
+            } catch (IOException ioe) {
+                say("Something bad happened with camera");
+            } catch (Exception sex) {
+                say("camera permission refused");
+            }
         }
     }
 
@@ -1345,8 +1585,11 @@ public class TrycorderFragment extends Fragment
     }
 
     public boolean onSurfaceTextureDestroyed(SurfaceTexture surface) {
-        mCamera.stopPreview();
-        mCamera.release();
+        if (mCamera != null) {
+            mCamera.stopPreview();
+            mCamera.release();
+            mCamera = null;
+        }
         return true;
     }
 
@@ -1354,6 +1597,47 @@ public class TrycorderFragment extends Fragment
         // Invoked every time there's a new Camera preview frame
     }
 
+    // switch between cameras
+    private void switchcam(int no) {
+        if (mCamera != null) {
+            mCamera.stopPreview();
+            mCamera.release();
+            mCamera = null;
+        }
+        switch (no) {
+            case 1:
+                try {
+                    mCamera = Camera.open();
+                    mCamera.setPreviewTexture(mViewerWindow.getSurfaceTexture());
+                    Camera.Parameters parameters = mCamera.getParameters();
+                    parameters.set("orientation", "portrait");
+                    mCamera.setParameters(parameters);
+                    mCamera.setDisplayOrientation(90);
+                    mCamera.startPreview();
+                } catch (IOException ioe) {
+                    say("Something bad happened with camera");
+                } catch (Exception sex) {
+                    say("camera permission refused");
+                }
+                break;
+            case 2:
+                try {
+                    mCamera = Camera.open(Camera.CameraInfo.CAMERA_FACING_FRONT);
+                    mCamera.setPreviewTexture(mViewerWindow.getSurfaceTexture());
+                    Camera.Parameters parameters = mCamera.getParameters();
+                    parameters.set("orientation", "portrait");
+                    mCamera.setParameters(parameters);
+                    mCamera.setDisplayOrientation(90);
+                    mCamera.startPreview();
+                } catch (IOException ioe) {
+                    say("Something bad happened with camera");
+                } catch (Exception sex) {
+                    say("camera permission refused");
+                }
+                break;
+        }
+    }
+
     // ==========================================================================================
     // switch the viewer on/off
     private void switchviewer(int no) {
@@ -1361,7 +1645,8 @@ public class TrycorderFragment extends Fragment
         mFederationlogo.setVisibility(View.GONE);
         mLogsConsole.setVisibility(View.GONE);
         mLogsInfo.setVisibility(View.GONE);
-        switch(no) {
+        mStarshipPlan.setVisibility(View.GONE);
+        switch (no) {
             case 0:
                 say("Viewer OFF");
                 mFederationlogo.setVisibility(View.VISIBLE);
@@ -1382,8 +1667,13 @@ public class TrycorderFragment extends Fragment
                 mLogsInfo.setVisibility(View.VISIBLE);
                 mVieweron = false;
                 break;
+            case 4:
+                say("Plans");
+                mStarshipPlan.setVisibility(View.VISIBLE);
+                mVieweron = false;
+                break;
         }
-        mViewermode=no;
+        mViewermode = no;
     }
 
     // =====================================================================================
@@ -1391,7 +1681,7 @@ public class TrycorderFragment extends Fragment
 
 
     private void snapphoto() {
-        if(mVieweron) {
+        if (mVieweron) {
             say("Picture Taken !");
             mCamera.takePicture(null, null, this);
         }
@@ -1421,13 +1711,17 @@ public class TrycorderFragment extends Fragment
     public static final int MEDIA_TYPE_IMAGE = 1;
     public static final int MEDIA_TYPE_VIDEO = 2;
 
-    /** Create a file Uri for saving an image or video */
-    private static Uri getOutputMediaFileUri(int type){
+    /**
+     * Create a file Uri for saving an image or video
+     */
+    private static Uri getOutputMediaFileUri(int type) {
         return Uri.fromFile(getOutputMediaFile(type));
     }
 
-    /** Create a File for saving an image or video */
-    private static File getOutputMediaFile(int type){
+    /**
+     * Create a File for saving an image or video
+     */
+    private static File getOutputMediaFile(int type) {
         // To be safe, you should check that the SDCard is mounted
         // using Environment.getExternalStorageState() before doing this.
 
@@ -1437,8 +1731,8 @@ public class TrycorderFragment extends Fragment
         // between applications and persist after your app has been uninstalled.
 
         // Create the storage directory if it does not exist
-        if (! mediaStorageDir.exists()){
-            if (! mediaStorageDir.mkdirs()){
+        if (!mediaStorageDir.exists()) {
+            if (!mediaStorageDir.mkdirs()) {
                 Log.d("Trycorder", "failed to create directory");
                 return null;
             }
@@ -1447,12 +1741,12 @@ public class TrycorderFragment extends Fragment
         // Create a media file name
         String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());
         File mediaFile;
-        if (type == MEDIA_TYPE_IMAGE){
+        if (type == MEDIA_TYPE_IMAGE) {
             mediaFile = new File(mediaStorageDir.getPath() + File.separator +
-                    "IMG_"+ timeStamp + ".jpg");
-        } else if(type == MEDIA_TYPE_VIDEO) {
+                    "IMG_" + timeStamp + ".jpg");
+        } else if (type == MEDIA_TYPE_VIDEO) {
             mediaFile = new File(mediaStorageDir.getPath() + File.separator +
-                    "VID_"+ timeStamp + ".mp4");
+                    "VID_" + timeStamp + ".mp4");
         } else {
             return null;
         }
@@ -1575,9 +1869,9 @@ public class TrycorderFragment extends Fragment
     public void onResults(Bundle results) {
         ArrayList<String> dutexte = results.getStringArrayList(SpeechRecognizer.RESULTS_RECOGNITION);
         if (dutexte != null && dutexte.size() > 0) {
-            for(int i=0;i<dutexte.size();++i) {
+            for (int i = 0; i < dutexte.size(); ++i) {
                 mSentence = dutexte.get(i);
-                if(matchvoice(mSentence)) {
+                if (matchvoice(mSentence)) {
                     mTextstatus_top.setText(mSentence);
                     return;
                 }
@@ -1595,9 +1889,9 @@ public class TrycorderFragment extends Fragment
     // functions to control the speech process
 
     private void listen() {
-        if(listenLanguage.equals("FR")) {
+        if (listenLanguage.equals("FR")) {
             mSpeechRecognizerIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, "fr-FR");
-        } else if(listenLanguage.equals("EN")) {
+        } else if (listenLanguage.equals("EN")) {
             mSpeechRecognizerIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, "en-US");
         } else {
             // automatic
@@ -1608,9 +1902,9 @@ public class TrycorderFragment extends Fragment
     }
 
     private void speak(String texte) {
-        if(speakLanguage.equals("FR")) {
+        if (speakLanguage.equals("FR")) {
             tts.setLanguage(Locale.FRENCH);
-        } else if(speakLanguage.equals("EN")) {
+        } else if (speakLanguage.equals("EN")) {
             tts.setLanguage(Locale.US);
         } else {
             // default prechoosen language
@@ -1619,84 +1913,84 @@ public class TrycorderFragment extends Fragment
         say(texte);
     }
 
-    private StringBuffer logbuffer=new StringBuffer(500);
+    private StringBuffer logbuffer = new StringBuffer(500);
 
     private void say(String texte) {
         mTextstatus_bottom.setText(texte);
-        logbuffer.insert(0,texte + "\n");
+        logbuffer.insert(0, texte + "\n");
         mLogsConsole.setText(logbuffer);
     }
 
     private boolean matchvoice(String texte) {
-        if(texte.contains("Martin")) {
+        if (texte.contains("Martin")) {
             switchbuttonlayout(0);
             speak("Martin is my Master.");
-            return(true);
+            return (true);
         }
-        if(texte.contains("phaser")) {
+        if (texte.contains("phaser")) {
             switchbuttonlayout(4);
             firephaser();
-            return(true);
+            return (true);
         }
-        if(texte.contains("fire") || texte.contains("torpedo")) {
+        if (texte.contains("fire") || texte.contains("torpedo")) {
             switchbuttonlayout(4);
             firemissiles();
-            return(true);
+            return (true);
         }
-        if(texte.contains("shield") || texte.contains("raise")) {
+        if (texte.contains("shield") || texte.contains("raise")) {
             switchbuttonlayout(3);
             raiseshields();
-            return(true);
+            return (true);
         }
-        if(texte.contains("sensor off")) {
+        if (texte.contains("sensor off")) {
             switchbuttonlayout(0);
             switchsensorlayout(0);
             stopsensors();
-            return(true);
+            return (true);
         }
-        if(texte.contains("sensor") || texte.contains("magnetic")) {
+        if (texte.contains("sensor") || texte.contains("magnetic")) {
             switchbuttonlayout(1);
             switchsensorlayout(1);
             startsensors(1);
-            return(true);
+            return (true);
         }
-        if(texte.contains("orientation") || texte.contains("direction")) {
+        if (texte.contains("orientation") || texte.contains("direction")) {
             switchbuttonlayout(1);
             switchsensorlayout(2);
             startsensors(2);
-            return(true);
+            return (true);
         }
-        if(texte.contains("gravity") || texte.contains("vibration")) {
+        if (texte.contains("gravity") || texte.contains("vibration")) {
             switchbuttonlayout(1);
             switchsensorlayout(3);
             startsensors(3);
-            return(true);
+            return (true);
         }
-        if(texte.contains("hailing") && texte.contains("close")) {
+        if (texte.contains("hailing") && texte.contains("close")) {
             switchbuttonlayout(2);
             closecomm();
-            return(true);
+            return (true);
         }
-        if(texte.contains("hailing") && texte.contains("open")) {
+        if (texte.contains("hailing") && texte.contains("open")) {
             switchbuttonlayout(2);
             opencomm();
-            return(true);
+            return (true);
         }
-        if(texte.contains("beam me up") || texte.contains("scotty")) {
+        if (texte.contains("beam me up") || texte.contains("scotty")) {
             switchbuttonlayout(5);
             transporterin();
-            return(true);
+            return (true);
         }
-        if(texte.contains("beam me down")) {
+        if (texte.contains("beam me down")) {
             switchbuttonlayout(5);
             transporterout();
-            return(true);
+            return (true);
         }
-        if(texte.contains("viewer")) {
+        if (texte.contains("viewer")) {
             switchbuttonlayout(6);
             switchviewer(1);
-            return(true);
+            return (true);
         }
-        return(false);
+        return (false);
     }
 }
diff --git a/app/src/main/res/drawable/trekbutton_gray_left.xml b/app/src/main/res/drawable/trekbutton_gray_left.xml
index a8b409b..bb38b1c 100644
--- a/app/src/main/res/drawable/trekbutton_gray_left.xml
+++ b/app/src/main/res/drawable/trekbutton_gray_left.xml
@@ -1,4 +1,24 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-
-</selector>
\ No newline at end of file
+    <item android:state_pressed="true">
+        <shape android:shape="rectangle">
+            <corners android:bottomLeftRadius="20dp" android:topLeftRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#689a92" android:startColor="#345953" />
+        </shape>
+    </item>
+    <item android:state_focused="true">
+        <shape android:shape="rectangle">
+            <corners android:bottomLeftRadius="20dp" android:topLeftRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <solid android:color="#58857e" />
+        </shape>
+    </item>
+    <item>
+        <shape android:shape="rectangle">
+            <corners android:bottomLeftRadius="20dp" android:topLeftRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#58857e" android:startColor="#8dbab3" />
+        </shape>
+    </item>
+</selector>
diff --git a/app/src/main/res/drawable/trekbutton_gray_right.xml b/app/src/main/res/drawable/trekbutton_gray_right.xml
index a8b409b..db2ee3f 100644
--- a/app/src/main/res/drawable/trekbutton_gray_right.xml
+++ b/app/src/main/res/drawable/trekbutton_gray_right.xml
@@ -1,4 +1,24 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-
-</selector>
\ No newline at end of file
+    <item android:state_pressed="true">
+        <shape android:shape="rectangle">
+            <corners android:bottomRightRadius="20dp" android:topRightRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#689a92" android:startColor="#345953" />
+        </shape>
+    </item>
+    <item android:state_focused="true">
+        <shape android:shape="rectangle">
+            <corners android:bottomRightRadius="20dp" android:topRightRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <solid android:color="#58857e" />
+        </shape>
+    </item>
+    <item>
+        <shape android:shape="rectangle">
+            <corners android:bottomRightRadius="20dp" android:topRightRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#58857e" android:startColor="#8dbab3" />
+        </shape>
+    </item>
+</selector>
diff --git a/app/src/main/res/drawable/trekbutton_mauve.xml b/app/src/main/res/drawable/trekbutton_mauve.xml
index a8b409b..c1a03e8 100644
--- a/app/src/main/res/drawable/trekbutton_mauve.xml
+++ b/app/src/main/res/drawable/trekbutton_mauve.xml
@@ -1,4 +1,24 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-
-</selector>
\ No newline at end of file
+    <item android:state_pressed="true">
+        <shape android:shape="rectangle">
+            <corners android:radius="20dp" />
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#689a92" android:startColor="#345953" />
+        </shape>
+    </item>
+    <item android:state_focused="true">
+        <shape android:shape="rectangle">
+            <corners android:radius="20dp" />
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <solid android:color="#58857e" />
+        </shape>
+    </item>
+    <item>
+        <shape android:shape="rectangle">
+            <corners android:radius="20dp" />
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#b02787" android:startColor="#cf5cab" />
+        </shape>
+    </item>
+</selector>
diff --git a/app/src/main/res/drawable/trekbutton_mauve_center.xml b/app/src/main/res/drawable/trekbutton_mauve_center.xml
index a8b409b..83f6863 100644
--- a/app/src/main/res/drawable/trekbutton_mauve_center.xml
+++ b/app/src/main/res/drawable/trekbutton_mauve_center.xml
@@ -1,4 +1,21 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-
-</selector>
\ No newline at end of file
+    <item android:state_pressed="true">
+        <shape android:shape="rectangle">
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#689a92" android:startColor="#345953" />
+        </shape>
+    </item>
+    <item android:state_focused="true">
+        <shape android:shape="rectangle">
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <solid android:color="#58857e" />
+        </shape>
+    </item>
+    <item>
+        <shape android:shape="rectangle">
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#b02787" android:startColor="#cf5cab" />
+        </shape>
+    </item>
+</selector>
diff --git a/app/src/main/res/drawable/trekbutton_mauve_left.xml b/app/src/main/res/drawable/trekbutton_mauve_left.xml
index a8b409b..83d9434 100644
--- a/app/src/main/res/drawable/trekbutton_mauve_left.xml
+++ b/app/src/main/res/drawable/trekbutton_mauve_left.xml
@@ -1,4 +1,24 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-
-</selector>
\ No newline at end of file
+    <item android:state_pressed="true">
+        <shape android:shape="rectangle">
+            <corners android:bottomLeftRadius="20dp" android:topLeftRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#689a92" android:startColor="#345953" />
+        </shape>
+    </item>
+    <item android:state_focused="true">
+        <shape android:shape="rectangle">
+            <corners android:bottomLeftRadius="20dp" android:topLeftRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <solid android:color="#58857e" />
+        </shape>
+    </item>
+    <item>
+        <shape android:shape="rectangle">
+            <corners android:bottomLeftRadius="20dp" android:topLeftRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#b02787" android:startColor="#cf5cab" />
+        </shape>
+    </item>
+</selector>
diff --git a/app/src/main/res/drawable/trekbutton_mauve_right.xml b/app/src/main/res/drawable/trekbutton_mauve_right.xml
index a8b409b..b2c77aa 100644
--- a/app/src/main/res/drawable/trekbutton_mauve_right.xml
+++ b/app/src/main/res/drawable/trekbutton_mauve_right.xml
@@ -1,4 +1,24 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-
-</selector>
\ No newline at end of file
+    <item android:state_pressed="true">
+        <shape android:shape="rectangle">
+            <corners android:bottomRightRadius="20dp" android:topRightRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#689a92" android:startColor="#345953" />
+        </shape>
+    </item>
+    <item android:state_focused="true">
+        <shape android:shape="rectangle">
+            <corners android:bottomRightRadius="20dp" android:topRightRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <solid android:color="#58857e" />
+        </shape>
+    </item>
+    <item>
+        <shape android:shape="rectangle">
+            <corners android:bottomRightRadius="20dp" android:topRightRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#b02787" android:startColor="#cf5cab" />
+        </shape>
+    </item>
+</selector>
diff --git a/app/src/main/res/drawable/trekbutton_pink.xml b/app/src/main/res/drawable/trekbutton_pink.xml
index a8b409b..d7f6edf 100644
--- a/app/src/main/res/drawable/trekbutton_pink.xml
+++ b/app/src/main/res/drawable/trekbutton_pink.xml
@@ -1,4 +1,24 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-
-</selector>
\ No newline at end of file
+    <item android:state_pressed="true">
+        <shape android:shape="rectangle">
+            <corners android:radius="20dp" />
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#689a92" android:startColor="#345953" />
+        </shape>
+    </item>
+    <item android:state_focused="true">
+        <shape android:shape="rectangle">
+            <corners android:radius="20dp" />
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <solid android:color="#58857e" />
+        </shape>
+    </item>
+    <item>
+        <shape android:shape="rectangle">
+            <corners android:radius="20dp" />
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#ec407a" android:startColor="#ce83b6" />
+        </shape>
+    </item>
+</selector>
diff --git a/app/src/main/res/drawable/trekbutton_pink_center.xml b/app/src/main/res/drawable/trekbutton_pink_center.xml
index a8b409b..0908a27 100644
--- a/app/src/main/res/drawable/trekbutton_pink_center.xml
+++ b/app/src/main/res/drawable/trekbutton_pink_center.xml
@@ -1,4 +1,21 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-
-</selector>
\ No newline at end of file
+    <item android:state_pressed="true">
+        <shape android:shape="rectangle">
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#689a92" android:startColor="#345953" />
+        </shape>
+    </item>
+    <item android:state_focused="true">
+        <shape android:shape="rectangle">
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <solid android:color="#58857e" />
+        </shape>
+    </item>
+    <item>
+        <shape android:shape="rectangle">
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#ec407a" android:startColor="#ce83b6" />
+        </shape>
+    </item>
+</selector>
diff --git a/app/src/main/res/drawable/trekbutton_pink_left.xml b/app/src/main/res/drawable/trekbutton_pink_left.xml
index a8b409b..ae0614c 100644
--- a/app/src/main/res/drawable/trekbutton_pink_left.xml
+++ b/app/src/main/res/drawable/trekbutton_pink_left.xml
@@ -1,4 +1,24 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-
-</selector>
\ No newline at end of file
+    <item android:state_pressed="true">
+        <shape android:shape="rectangle">
+            <corners android:bottomLeftRadius="20dp" android:topLeftRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#689a92" android:startColor="#345953" />
+        </shape>
+    </item>
+    <item android:state_focused="true">
+        <shape android:shape="rectangle">
+            <corners android:bottomLeftRadius="20dp" android:topLeftRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <solid android:color="#58857e" />
+        </shape>
+    </item>
+    <item>
+        <shape android:shape="rectangle">
+            <corners android:bottomLeftRadius="20dp" android:topLeftRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#ec407a" android:startColor="#ce83b6" />
+        </shape>
+    </item>
+</selector>
diff --git a/app/src/main/res/drawable/trekbutton_pink_right.xml b/app/src/main/res/drawable/trekbutton_pink_right.xml
index a8b409b..fb0ef71 100644
--- a/app/src/main/res/drawable/trekbutton_pink_right.xml
+++ b/app/src/main/res/drawable/trekbutton_pink_right.xml
@@ -1,4 +1,24 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-
-</selector>
\ No newline at end of file
+    <item android:state_pressed="true">
+        <shape android:shape="rectangle">
+            <corners android:bottomRightRadius="20dp" android:topRightRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#689a92" android:startColor="#345953" />
+        </shape>
+    </item>
+    <item android:state_focused="true">
+        <shape android:shape="rectangle">
+            <corners android:bottomRightRadius="20dp" android:topRightRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <solid android:color="#58857e" />
+        </shape>
+    </item>
+    <item>
+        <shape android:shape="rectangle">
+            <corners android:bottomRightRadius="20dp" android:topRightRadius="20dp"/>
+            <stroke android:width="1dip" android:color="#5e7974" />
+            <gradient android:angle="-90" android:endColor="#ec407a" android:startColor="#ce83b6" />
+        </shape>
+    </item>
+</selector>
diff --git a/app/src/main/res/layout/trycorder_fragment.xml b/app/src/main/res/layout/trycorder_fragment.xml
index 83c44fa..1890782 100644
--- a/app/src/main/res/layout/trycorder_fragment.xml
+++ b/app/src/main/res/layout/trycorder_fragment.xml
@@ -47,10 +47,10 @@
                     android:layout_height="32dp"
                     android:layout_marginEnd="@dimen/button_margin"
                     android:layout_marginStart="@dimen/button_margin"
-                    android:layout_weight="2"
-                    android:background="@android:color/holo_green_dark"
+                    android:layout_weight="1.5"
+                    android:background="@drawable/trekbutton_green_center"
                     android:maxLines="1"
-                    android:text="START"
+                    android:text="Start"
                     android:textSize="18sp"
                     android:textStyle="bold" />
 
@@ -60,23 +60,37 @@
                     android:layout_height="32dp"
                     android:layout_marginEnd="@dimen/button_margin"
                     android:layout_marginStart="@dimen/button_margin"
-                    android:layout_weight="2"
-                    android:background="@android:color/holo_red_dark"
+                    android:layout_weight="1.5"
+                    android:background="@drawable/trekbutton_red_center"
                     android:maxLines="1"
-                    android:text="STOP"
+                    android:text="Stop"
                     android:textSize="18sp"
                     android:textStyle="bold" />
 
                 <Button
+                    android:id="@+id/sound_button"
+                    android:layout_width="0dp"
+                    android:layout_height="32dp"
+                    android:layout_marginEnd="@dimen/button_margin"
+                    android:layout_marginStart="@dimen/button_margin"
+                    android:layout_gravity="center"
+                    android:layout_weight="1.5"
+                    android:background="@drawable/trekbutton_gray_center"
+                    android:maxLines="1"
+                    android:text="Sound"
+                    android:textSize="18sp" />
+
+
+                <Button
                     android:id="@+id/settings_button"
                     android:layout_width="0dp"
                     android:layout_height="32dp"
                     android:layout_marginEnd="@dimen/button_margin"
                     android:layout_marginStart="@dimen/button_margin"
-                    android:layout_weight="2"
+                    android:layout_weight="1.5"
                     android:background="@drawable/trekbutton_blue_right"
                     android:maxLines="1"
-                    android:text="SETUP"
+                    android:text="Setup"
                     android:textSize="18sp"
                     android:textStyle="bold" />
 
@@ -109,6 +123,7 @@
         android:layout_width="match_parent"
         android:layout_height="0dp"
         android:layout_weight="80"
+        android:baselineAligned="false"
         android:background="@android:color/black"
         android:orientation="horizontal"
         android:weightSum="10">
@@ -214,7 +229,7 @@
                 android:layout_marginStart="@dimen/button_margin"
                 android:layout_marginTop="@dimen/button_margin"
                 android:layout_weight="1"
-                android:background="@drawable/trekbutton_blue_right"
+                android:background="@drawable/trekbutton_pink_right"
                 android:maxLines="1"
                 android:text="TRANSP"
                 android:textSize="18sp"
@@ -234,7 +249,7 @@
                 android:layout_marginStart="@dimen/button_margin"
                 android:layout_marginTop="@dimen/button_margin"
                 android:layout_weight="1"
-                android:background="@drawable/trekbutton_blue_right"
+                android:background="@drawable/trekbutton_mauve_right"
                 android:maxLines="1"
                 android:text="VIEWER"
                 android:textSize="18sp"
@@ -266,21 +281,6 @@
                 android:layout_weight="1"
                 android:ellipsize="middle" />
 
-            <Button
-                android:id="@+id/sound_button"
-                android:layout_width="match_parent"
-                android:layout_height="0dp"
-                android:layout_marginBottom="@dimen/button_margin"
-                android:layout_marginEnd="@dimen/button_margin"
-                android:layout_marginStart="@dimen/button_margin"
-                android:layout_marginTop="@dimen/button_margin"
-                android:layout_weight="1"
-                android:background="@drawable/trekbutton"
-                android:maxLines="1"
-                android:text="SOUND"
-                android:textSize="18sp"
-                android:textStyle="bold" />
-
 
         </LinearLayout>
 
@@ -415,95 +415,107 @@
                 android:background="@android:color/black"
                 android:orientation="vertical">
 
-                <!-- ========== button layout for comm ============== -->
+                <!-- ========== button layout for sensors ============== -->
                 <LinearLayout
-                    android:id="@+id/sensor2_comm_layout"
+                    android:id="@+id/sensor2_sensor_layout"
                     android:layout_width="match_parent"
                     android:layout_height="match_parent"
                     android:background="@android:color/black"
                     android:gravity="center"
                     android:orientation="horizontal"
-                    android:visibility="gone"
+                    android:visibility="visible"
                     android:weightSum="100">
 
                     <Button
-                        android:id="@+id/opencomm_button"
+                        android:id="@+id/magnetic_button"
                         android:layout_width="0dp"
                         android:layout_height="48dp"
                         android:layout_gravity="center"
                         android:layout_marginLeft="2dp"
                         android:layout_marginRight="2dp"
-                        android:layout_weight="50"
-                        android:background="@drawable/trekbutton_green_left"
-                        android:text="OPEN COMM" />
+                        android:layout_weight="20"
+                        android:background="@drawable/trekbutton_yellow_left"
+                        android:text="Magn" />
 
                     <Button
-                        android:id="@+id/closecomm_button"
+                        android:id="@+id/orientation_button"
                         android:layout_width="0dp"
                         android:layout_height="48dp"
                         android:layout_gravity="center"
                         android:layout_marginLeft="2dp"
                         android:layout_marginRight="2dp"
-                        android:layout_weight="50"
-                        android:background="@drawable/trekbutton_green_right"
-                        android:text="CLOSE COMM" />
-
-                </LinearLayout>
-
-                <!-- ========== button layout for sensors ============== -->
-                <LinearLayout
-                    android:id="@+id/sensor2_sensor_layout"
-                    android:layout_width="match_parent"
-                    android:layout_height="match_parent"
-                    android:background="@android:color/black"
-                    android:gravity="center"
-                    android:orientation="horizontal"
-                    android:visibility="gone"
-                    android:weightSum="100">
+                        android:layout_weight="20"
+                        android:background="@drawable/trekbutton_yellow_center"
+                        android:text="Orient" />
 
                     <Button
-                        android:id="@+id/magnetic_button"
+                        android:id="@+id/gravity_button"
                         android:layout_width="0dp"
                         android:layout_height="48dp"
                         android:layout_gravity="center"
                         android:layout_marginLeft="2dp"
                         android:layout_marginRight="2dp"
-                        android:layout_weight="28"
-                        android:background="@drawable/trekbutton_yellow_left"
-                        android:text="MAG" />
+                        android:layout_weight="20"
+                        android:background="@drawable/trekbutton_yellow_center"
+                        android:text="Grav" />
 
                     <Button
-                        android:id="@+id/orientation_button"
+                        android:id="@+id/temperature_button"
                         android:layout_width="0dp"
                         android:layout_height="48dp"
                         android:layout_gravity="center"
                         android:layout_marginLeft="2dp"
                         android:layout_marginRight="2dp"
-                        android:layout_weight="28"
+                        android:layout_weight="20"
                         android:background="@drawable/trekbutton_yellow_center"
-                        android:text="ORI" />
+                        android:text="Temp" />
 
                     <Button
-                        android:id="@+id/gravity_button"
+                        android:id="@+id/sensoroff_button"
                         android:layout_width="0dp"
                         android:layout_height="48dp"
                         android:layout_gravity="center"
                         android:layout_marginLeft="2dp"
                         android:layout_marginRight="2dp"
-                        android:layout_weight="28"
-                        android:background="@drawable/trekbutton_yellow_center"
-                        android:text="GRA" />
+                        android:layout_weight="20"
+                        android:background="@drawable/trekbutton_yellow_right"
+                        android:text="OFF" />
+
+
+                </LinearLayout>
+
+                <!-- ========== button layout for comm ============== -->
+                <LinearLayout
+                    android:id="@+id/sensor2_comm_layout"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:background="@android:color/black"
+                    android:gravity="center"
+                    android:orientation="horizontal"
+                    android:visibility="gone"
+                    android:weightSum="100">
 
                     <Button
-                        android:id="@+id/sensoroff_button"
+                        android:id="@+id/opencomm_button"
                         android:layout_width="0dp"
                         android:layout_height="48dp"
                         android:layout_gravity="center"
                         android:layout_marginLeft="2dp"
                         android:layout_marginRight="2dp"
-                        android:layout_weight="16"
-                        android:background="@drawable/trekbutton_yellow_right"
-                        android:text="OFF" />
+                        android:layout_weight="50"
+                        android:background="@drawable/trekbutton_green_left"
+                        android:text="OPEN COMM" />
+
+                    <Button
+                        android:id="@+id/closecomm_button"
+                        android:layout_width="0dp"
+                        android:layout_height="48dp"
+                        android:layout_gravity="center"
+                        android:layout_marginLeft="2dp"
+                        android:layout_marginRight="2dp"
+                        android:layout_weight="50"
+                        android:background="@drawable/trekbutton_green_right"
+                        android:text="CLOSE COMM" />
 
                 </LinearLayout>
 
@@ -596,7 +608,7 @@
                         android:layout_marginLeft="2dp"
                         android:layout_marginRight="2dp"
                         android:layout_weight="50"
-                        android:background="@drawable/trekbutton_blue_left"
+                        android:background="@drawable/trekbutton_pink_left"
                         android:text="TRANSPORT OUT" />
 
                     <Button
@@ -607,7 +619,7 @@
                         android:layout_marginLeft="2dp"
                         android:layout_marginRight="2dp"
                         android:layout_weight="50"
-                        android:background="@drawable/trekbutton_blue_right"
+                        android:background="@drawable/trekbutton_pink_right"
                         android:text="TRANSPORT IN" />
 
                 </LinearLayout>
@@ -631,8 +643,19 @@
                         android:layout_marginLeft="2dp"
                         android:layout_marginRight="2dp"
                         android:layout_weight="33"
-                        android:background="@drawable/trekbutton_blue_left"
-                        android:text="Viewer On" />
+                        android:background="@drawable/trekbutton_mauve_left"
+                        android:text="Main Viewer" />
+
+                    <Button
+                        android:id="@+id/viewerfront_button"
+                        android:layout_width="0dp"
+                        android:layout_height="48dp"
+                        android:layout_gravity="center"
+                        android:layout_marginLeft="2dp"
+                        android:layout_marginRight="2dp"
+                        android:layout_weight="34"
+                        android:background="@drawable/trekbutton_mauve_center"
+                        android:text="Local Viewer" />
 
                     <Button
                         android:id="@+id/vieweroff_button"
@@ -642,7 +665,7 @@
                         android:layout_marginLeft="2dp"
                         android:layout_marginRight="2dp"
                         android:layout_weight="33"
-                        android:background="@drawable/trekbutton_blue_right"
+                        android:background="@drawable/trekbutton_mauve_right"
                         android:text="Viewer Off" />
 
                 </LinearLayout>
@@ -655,7 +678,7 @@
                     android:background="@android:color/black"
                     android:gravity="center"
                     android:orientation="horizontal"
-                    android:visibility="visible"
+                    android:visibility="gone"
                     android:weightSum="100">
 
 
@@ -681,6 +704,17 @@
                         android:background="@drawable/trekbutton_blue"
                         android:text="Info log" />
 
+                    <Button
+                        android:id="@+id/logsplans_button"
+                        android:layout_width="0dp"
+                        android:layout_height="48dp"
+                        android:layout_gravity="center"
+                        android:layout_marginLeft="2dp"
+                        android:layout_marginRight="2dp"
+                        android:layout_weight="33"
+                        android:background="@drawable/trekbutton_blue"
+                        android:text="Plans" />
+
                 </LinearLayout>
 
             </LinearLayout>
@@ -775,10 +809,17 @@
                             android:textColor="@android:color/holo_green_light"
                             android:textSize="18sp"
                             android:textStyle="bold"
-                            android:visibility="visible" />
+                            android:visibility="gone" />
 
                     </ScrollView>
 
+                    <ImageView
+                        android:id="@+id/starship_plans"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:src="@drawable/starship_plans"
+                        android:visibility="visible" />
+
                 </LinearLayout>
 
                 <LinearLayout
@@ -882,9 +923,9 @@
                     android:layout_marginEnd="@dimen/button_margin"
                     android:layout_marginStart="@dimen/button_margin"
                     android:layout_weight="2"
-                    android:background="@android:color/holo_green_dark"
+                    android:background="@drawable/trekbutton_green_center"
                     android:maxLines="1"
-                    android:text="PHOTO"
+                    android:text="Photo"
                     android:textSize="18sp"
                     android:textStyle="bold" />
 
@@ -896,9 +937,9 @@
                     android:layout_marginEnd="@dimen/button_margin"
                     android:layout_marginStart="@dimen/button_margin"
                     android:layout_weight="2"
-                    android:background="@android:color/holo_red_dark"
+                    android:background="@drawable/trekbutton_red_center"
                     android:maxLines="1"
-                    android:text="RECORD"
+                    android:text="Record"
                     android:textSize="18sp"
                     android:textStyle="bold" />
 
@@ -912,7 +953,7 @@
                     android:layout_weight="2"
                     android:background="@drawable/trekbutton_blue_right"
                     android:maxLines="1"
-                    android:text="GALLERY"
+                    android:text="Gallery"
                     android:textSize="18sp"
                     android:textStyle="bold" />
 
diff --git a/gitdiff.txt b/gitdiff.txt
index c9c0db2..3fe3463 100644
--- a/gitdiff.txt
+++ b/gitdiff.txt
@@ -1,817 +0,0 @@
-diff --git a/app/src/main/java/net/ddns/mlsoftlaberge/trycorder/TrycorderFragment.java b/app/src/main/java/net/ddns/mlsoftlaberge/trycorder/TrycorderFragment.java
-index 7a758ab..5c5e38c 100644
---- a/app/src/main/java/net/ddns/mlsoftlaberge/trycorder/TrycorderFragment.java
-+++ b/app/src/main/java/net/ddns/mlsoftlaberge/trycorder/TrycorderFragment.java
-@@ -67,7 +67,10 @@ public class TrycorderFragment extends Fragment
-     // handles to camera and textureview
-     private Camera mCamera;
-     private TextureView mViewerWindow;
-+
-+    // handles for the 2 logs pages
-     private TextView mLogsConsole;
-+    private TextView mLogsInfo;
- 
-     // handles for the conversation functions
-     private TextToSpeech tts;
-@@ -76,6 +79,10 @@ public class TrycorderFragment extends Fragment
-     private Intent mSpeechRecognizerIntent;
-     private String mSentence;
- 
-+    // handle for the gps
-+    private LocationManager locationManager;
-+    private String locationProvider;
-+
-     // the handle to the sensors
-     private SensorManager mSensorManager;
- 
-@@ -149,10 +156,13 @@ public class TrycorderFragment extends Fragment
-     private Button mViewerButton;
-     private Button mViewerOnButton;
-     private Button mViewerOffButton;
--    private Button mViewerLogsButton;
-     private boolean mVieweron;
-     private int mViewermode=0;
- 
-+    private Button mLogsButton;
-+    private Button mLogsConsoleButton;
-+    private Button mLogsInfoButton;
-+
-     // the button to control sound-effects
-     private Button mSoundButton;
-     private boolean mSoundStatus=false;
-@@ -167,6 +177,8 @@ public class TrycorderFragment extends Fragment
-     private LinearLayout mSensor2fireLayout;
-     private LinearLayout mSensor2transporterLayout;
-     private LinearLayout mSensor2viewerLayout;
-+    private LinearLayout mSensor2logsLayout;
-+    private int mSensor2mode=0;
- 
-     private LinearLayout mSensor3Layout;
-     private ImageView mFederationlogo;
-@@ -180,16 +192,25 @@ public class TrycorderFragment extends Fragment
-     String listenLanguage;
-     String displayLanguage;
- 
-+    // the preferences holder
-+    SharedPreferences sharedPref;
-+
-     @Override
-     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-         View view = inflater.inflate(R.layout.trycorder_fragment, container, false);
- 
--        SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(getActivity());
-+        PreferenceManager.setDefaultValues(getActivity(), R.xml.preferences, false);
-+
-+        sharedPref = PreferenceManager.getDefaultSharedPreferences(getActivity());
-         autoListen = sharedPref.getBoolean("pref_key_auto_listen",false);
-         speakLanguage = sharedPref.getString("pref_key_speak_language", "");
-         listenLanguage = sharedPref.getString("pref_key_listen_language", "");
-         displayLanguage = sharedPref.getString("pref_key_display_language", "");
- 
-+        //mSensormode = sharedPref.getInt("pref_key_sensor_mode",0);
-+        //mSensor2mode = sharedPref.getInt("pref_key_sensor2_mode",0);
-+        //mViewermode = sharedPref.getInt("pref_key_viewer_mode",0);
-+
-         // ===================== top horizontal button grid ==========================
-         // the start button
-         mTalkButton = (ImageButton) view.findViewById(R.id.talk_button);
-@@ -475,8 +496,19 @@ public class TrycorderFragment extends Fragment
-             }
-         });
- 
--        mViewerLogsButton = (Button) view.findViewById(R.id.viewerlogs_button);
--        mViewerLogsButton.setOnClickListener(new View.OnClickListener() {
-+        // ===================== viewer buttons group ============================
-+        // the viewer button
-+        mLogsButton = (Button) view.findViewById(R.id.logs_button);
-+        mLogsButton.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                buttonsound();
-+                switchbuttonlayout(7);
-+            }
-+        });
-+
-+        mLogsConsoleButton = (Button) view.findViewById(R.id.logsconsole_button);
-+        mLogsConsoleButton.setOnClickListener(new View.OnClickListener() {
-             @Override
-             public void onClick(View view) {
-                 buttonsound();
-@@ -484,6 +516,15 @@ public class TrycorderFragment extends Fragment
-             }
-         });
- 
-+        mLogsInfoButton = (Button) view.findViewById(R.id.logsinfo_button);
-+        mLogsInfoButton.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                buttonsound();
-+                switchviewer(3);
-+            }
-+        });
-+
-         // ===================== sound buttons group ============================
-         // the sound-effect button
-         mSoundButton = (Button) view.findViewById(R.id.sound_button);
-@@ -506,11 +547,14 @@ public class TrycorderFragment extends Fragment
-         mSensor2fireLayout = (LinearLayout) view.findViewById(R.id.sensor2_fire_layout);
-         mSensor2transporterLayout = (LinearLayout) view.findViewById(R.id.sensor2_transporter_layout);
-         mSensor2viewerLayout = (LinearLayout) view.findViewById(R.id.sensor2_viewer_layout);
-+        mSensor2logsLayout = (LinearLayout) view.findViewById(R.id.sensor2_logs_layout);
- 
-         // the sensor layout, to contain my surfaceview
-         mSensor3Layout = (LinearLayout) view.findViewById(R.id.sensor3_layout);
-         mFederationlogo = (ImageView) view.findViewById(R.id.federation_logo);
-         mLogsConsole = (TextView) view.findViewById(R.id.logs_console);
-+        mLogsInfo = (TextView) view.findViewById(R.id.logs_info);
-+
-         // create and activate a textureview to contain camera display
-         mViewerWindow = (TextureView) view.findViewById(R.id.viewer_window);
-         mViewerWindow.setSurfaceTextureListener(this);
-@@ -518,8 +562,8 @@ public class TrycorderFragment extends Fragment
-         mFederationlogo.setVisibility(View.VISIBLE);
-         mViewerWindow.setVisibility(View.GONE);
-         mLogsConsole.setVisibility(View.GONE);
-+        mLogsInfo.setVisibility(View.GONE);
-         mVieweron=false;
--        mViewermode=0;
- 
-         // ==============================================================================
-         // create layout params for the created views
-@@ -550,7 +594,36 @@ public class TrycorderFragment extends Fragment
-         mSensorLayout.addView(mGraSensorView,tlayoutParams);
- 
-         // set the sensors invisible
--        switchsensorlayout(0);
-+        //switchsensorlayout(0);
-+
-+        // initialize the gps service
-+        locationManager = (LocationManager) getActivity().getSystemService(getActivity().LOCATION_SERVICE);
-+        boolean enabled = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER);
-+        // check if enabled and if not send user to the GSP settings
-+        // Better solution would be to display a dialog and suggesting to
-+        // go to the settings
-+        if (!enabled) {
-+            Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
-+            startActivity(intent);
-+        }
-+        // Define the criteria how to select the locatioin provider -> use
-+        // default
-+        Location location=null;
-+        //Criteria criteria = new Criteria();
-+        //locationProvider = locationManager.getBestProvider(criteria, false);
-+        locationProvider="gps";
-+        try {
-+            location = locationManager.getLastKnownLocation(locationProvider);
-+        } catch (SecurityException e) {
-+            say("No GPS available");
-+        }
-+        // Initialize the location fields
-+        if (location != null) {
-+            say("Provider " + locationProvider + " has been selected.");
-+            mOriSensorView.setLocation(location);
-+        } else {
-+            say("No location available. " + locationProvider);
-+        }
- 
-         // ============== initialize the audio listener and talker ==============
- 
-@@ -603,7 +676,9 @@ public class TrycorderFragment extends Fragment
-         mFireButton.setTypeface(face2);
-         mTransporterButton.setTypeface(face2);
-         mViewerButton.setTypeface(face2);
-+        mLogsButton.setTypeface(face2);
-         mSoundButton.setTypeface(face2);
-+
-         // center buttons
-         mMagneticButton.setTypeface(face3);
-         mOrientationButton.setTypeface(face3);
-@@ -619,19 +694,31 @@ public class TrycorderFragment extends Fragment
-         mTransportInButton.setTypeface(face);
-         mViewerOnButton.setTypeface(face3);
-         mViewerOffButton.setTypeface(face3);
--        mViewerLogsButton.setTypeface(face3);
-+        mLogsConsoleButton.setTypeface(face3);
-+        mLogsInfoButton.setTypeface(face3);
-     }
- 
-     @Override
-     public void onResume() {
-         super.onResume();
--        switchbuttonlayout(1);
-+        mSensormode = sharedPref.getInt("pref_key_sensor_mode",0);
-+        mSensor2mode = sharedPref.getInt("pref_key_sensor2_mode",0);
-+        mViewermode = sharedPref.getInt("pref_key_viewer_mode",0);
-+
-+        switchbuttonlayout(mSensor2mode);
-+        switchsensorlayout(mSensormode);
-         startsensors(mSensormode);
-+        switchviewer(mViewermode);
-     }
- 
-     @Override
-     public void onPause() {
-         stopsensors();
-+        SharedPreferences.Editor editor = sharedPref.edit();
-+        editor.putInt("pref_key_sensor_mode", mSensormode);
-+        editor.putInt("pref_key_sensor2_mode", mSensor2mode);
-+        editor.putInt("pref_key_viewer_mode", mViewermode);
-+        editor.commit();
-         super.onPause();
-     }
- 
-@@ -700,6 +787,7 @@ public class TrycorderFragment extends Fragment
-         mSensor2fireLayout.setVisibility(View.GONE);
-         mSensor2transporterLayout.setVisibility(View.GONE);
-         mSensor2viewerLayout.setVisibility(View.GONE);
-+        mSensor2logsLayout.setVisibility(View.GONE);
-         switch(no) {
-             case 1:
-                 say("Sensors Mode");
-@@ -725,7 +813,12 @@ public class TrycorderFragment extends Fragment
-                 say("Viewer Mode");
-                 mSensor2viewerLayout.setVisibility(View.VISIBLE);
-                 break;
-+            case 7:
-+                say("Logs Mode");
-+                mSensor2logsLayout.setVisibility(View.VISIBLE);
-+                break;
-         }
-+        mSensor2mode=no;
-     }
- 
-     // =====================================================================================
-@@ -840,6 +933,11 @@ public class TrycorderFragment extends Fragment
-         stopmusic();
-         mSensorManager.unregisterListener(mOriSensorView);
-         mRunStatus=false;
-+        try {
-+            locationManager.removeUpdates(mOriSensorView);
-+        } catch (SecurityException e) {
-+            say("Error closing GPS");
-+        }
-     }
- 
-     // here we start the sensor reading
-@@ -850,6 +948,13 @@ public class TrycorderFragment extends Fragment
-                 mSensorManager.getDefaultSensor(Sensor.TYPE_ORIENTATION),
-                 SensorManager.SENSOR_DELAY_NORMAL);
-         if(mSoundStatus) startmusic();
-+        // start gps location updates
-+        try {
-+            locationManager.requestLocationUpdates(locationProvider, 400, 1, mOriSensorView);
-+        } catch (SecurityException e) {
-+            say("No GPS avalaible.");
-+        }
-+
-     }
- 
-     // ==========================================================================================
-@@ -859,8 +964,6 @@ public class TrycorderFragment extends Fragment
-         private Paint paint;
-         private float position = 0;
- 
--        private LocationManager locationManager;
--        private String locationProvider;
-         private Location location=null;
- 
-         public OriSensorView(Context context) {
-@@ -876,33 +979,6 @@ public class TrycorderFragment extends Fragment
-             paint.setTextSize(25);
-             paint.setStyle(Paint.Style.STROKE);
-             paint.setColor(Color.WHITE);
--            // initialize the gps service
--            locationManager = (LocationManager) getActivity().getSystemService(getActivity().LOCATION_SERVICE);
--            boolean enabled = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER);
--            // check if enabled and if not send user to the GSP settings
--            // Better solution would be to display a dialog and suggesting to
--            // go to the settings
--            if (!enabled) {
--                Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
--                startActivity(intent);
--            }
--            // Define the criteria how to select the locatioin provider -> use
--            // default
--            Criteria criteria = new Criteria();
--            locationProvider = locationManager.getBestProvider(criteria, false);
--            try {
--                location = locationManager.getLastKnownLocation(locationProvider);
--                locationManager.requestLocationUpdates(locationProvider, 400, 1, this);
--            } catch (SecurityException e) {
--                say("No GPS available");
--            }
--            // Initialize the location fields
--            if (location != null) {
--                say("Provider " + locationProvider + " has been selected.");
--            } else {
--                say("No location available. " + locationProvider);
--            }
--
-         }
- 
-         @Override
-@@ -917,7 +993,7 @@ public class TrycorderFragment extends Fragment
- 
-             float radius = (float) (Math.min(xPoint, yPoint) * 0.9);
-             canvas.drawCircle(xPoint, yPoint, radius, paint);
--            canvas.drawRect(0, 0, getMeasuredWidth(), getMeasuredHeight(), paint);
-+            // canvas.drawRect(0, 0, getMeasuredWidth(), getMeasuredHeight(), paint);
- 
-             // 3.1416 is a good approximation for the circle
-             canvas.drawLine(xPoint,
-@@ -946,6 +1022,10 @@ public class TrycorderFragment extends Fragment
-             invalidate();
-         }
- 
-+        public void setLocation(Location loc) {
-+            this.location = loc;
-+        }
-+
-         @Override
-         public void onAccuracyChanged(Sensor sensor, int accuracy) {
-         }
-@@ -1280,6 +1360,7 @@ public class TrycorderFragment extends Fragment
-         mViewerWindow.setVisibility(View.GONE);
-         mFederationlogo.setVisibility(View.GONE);
-         mLogsConsole.setVisibility(View.GONE);
-+        mLogsInfo.setVisibility(View.GONE);
-         switch(no) {
-             case 0:
-                 say("Viewer OFF");
-@@ -1296,6 +1377,11 @@ public class TrycorderFragment extends Fragment
-                 mLogsConsole.setVisibility(View.VISIBLE);
-                 mVieweron = false;
-                 break;
-+            case 3:
-+                say("Logs Info");
-+                mLogsInfo.setVisibility(View.VISIBLE);
-+                mVieweron = false;
-+                break;
-         }
-         mViewermode=no;
-     }
-diff --git a/app/src/main/res/layout/trycorder_fragment.xml b/app/src/main/res/layout/trycorder_fragment.xml
-index c68a953..83c44fa 100644
---- a/app/src/main/res/layout/trycorder_fragment.xml
-+++ b/app/src/main/res/layout/trycorder_fragment.xml
-@@ -223,7 +223,7 @@
-             <TextView
-                 android:layout_width="match_parent"
-                 android:layout_height="0dp"
--                android:layout_weight="1.5" />
-+                android:layout_weight="0.5" />
- 
-             <Button
-                 android:id="@+id/viewer_button"
-@@ -243,7 +243,27 @@
-             <TextView
-                 android:layout_width="match_parent"
-                 android:layout_height="0dp"
--                android:layout_weight="1.5"
-+                android:layout_weight="0.5" />
-+
-+            <Button
-+                android:id="@+id/logs_button"
-+                android:layout_width="match_parent"
-+                android:layout_height="0dp"
-+                android:layout_marginBottom="@dimen/button_margin"
-+                android:layout_marginEnd="@dimen/button_margin"
-+                android:layout_marginStart="@dimen/button_margin"
-+                android:layout_marginTop="@dimen/button_margin"
-+                android:layout_weight="1"
-+                android:background="@drawable/trekbutton_blue_right"
-+                android:maxLines="1"
-+                android:text="LOGS"
-+                android:textSize="18sp"
-+                android:textStyle="bold" />
-+
-+            <TextView
-+                android:layout_width="match_parent"
-+                android:layout_height="0dp"
-+                android:layout_weight="1"
-                 android:ellipsize="middle" />
- 
-             <Button
-@@ -600,7 +620,7 @@
-                     android:background="@android:color/black"
-                     android:gravity="center"
-                     android:orientation="horizontal"
--                    android:visibility="visible"
-+                    android:visibility="gone"
-                     android:weightSum="100">
- 
-                     <Button
-@@ -612,7 +632,7 @@
-                         android:layout_marginRight="2dp"
-                         android:layout_weight="33"
-                         android:background="@drawable/trekbutton_blue_left"
--                        android:text="VIEWER ON" />
-+                        android:text="Viewer On" />
- 
-                     <Button
-                         android:id="@+id/vieweroff_button"
-@@ -623,18 +643,43 @@
-                         android:layout_marginRight="2dp"
-                         android:layout_weight="33"
-                         android:background="@drawable/trekbutton_blue_right"
--                        android:text="VIEWER OFF" />
-+                        android:text="Viewer Off" />
-+
-+                </LinearLayout>
-+
-+                <!-- ========== button layout for logs ============== -->
-+                <LinearLayout
-+                    android:id="@+id/sensor2_logs_layout"
-+                    android:layout_width="match_parent"
-+                    android:layout_height="match_parent"
-+                    android:background="@android:color/black"
-+                    android:gravity="center"
-+                    android:orientation="horizontal"
-+                    android:visibility="visible"
-+                    android:weightSum="100">
-+
-+
-+                    <Button
-+                        android:id="@+id/logsconsole_button"
-+                        android:layout_width="0dp"
-+                        android:layout_height="48dp"
-+                        android:layout_gravity="center"
-+                        android:layout_marginLeft="2dp"
-+                        android:layout_marginRight="2dp"
-+                        android:layout_weight="33"
-+                        android:background="@drawable/trekbutton_blue"
-+                        android:text="Console log" />
- 
-                     <Button
--                        android:id="@+id/viewerlogs_button"
-+                        android:id="@+id/logsinfo_button"
-                         android:layout_width="0dp"
-                         android:layout_height="48dp"
-                         android:layout_gravity="center"
-                         android:layout_marginLeft="2dp"
-                         android:layout_marginRight="2dp"
--                        android:layout_weight="34"
-+                        android:layout_weight="33"
-                         android:background="@drawable/trekbutton_blue"
--                        android:text="LOGS" />
-+                        android:text="Info log" />
- 
-                 </LinearLayout>
- 
-@@ -704,7 +749,7 @@
- 
-                     <ScrollView
-                         android:layout_width="match_parent"
--                        android:layout_height="match_parent">
-+                        android:layout_height="wrap_content">
- 
-                         <TextView
-                             android:id="@+id/logs_console"
-@@ -714,6 +759,22 @@
-                             android:textColor="@android:color/holo_green_light"
-                             android:textSize="18sp"
-                             android:textStyle="bold"
-+                            android:visibility="gone" />
-+
-+                    </ScrollView>
-+
-+                    <ScrollView
-+                        android:layout_width="match_parent"
-+                        android:layout_height="wrap_content">
-+
-+                        <TextView
-+                            android:id="@+id/logs_info"
-+                            android:layout_width="match_parent"
-+                            android:layout_height="wrap_content"
-+                            android:text="Info log"
-+                            android:textColor="@android:color/holo_green_light"
-+                            android:textSize="18sp"
-+                            android:textStyle="bold"
-                             android:visibility="visible" />
- 
-                     </ScrollView>
-diff --git a/app/src/main/res/values/arrays.xml b/app/src/main/res/values/arrays.xml
-index 30f0564..c5fe4e9 100644
---- a/app/src/main/res/values/arrays.xml
-+++ b/app/src/main/res/values/arrays.xml
-@@ -13,4 +13,54 @@
-         <item>Auto</item>
-     </string-array>
- 
-+    <string-array name="sensor2_array_entries">
-+        <item>None</item>
-+        <item>Sensors</item>
-+        <item>Communication</item>
-+        <item>Shields</item>
-+        <item>Fire</item>
-+        <item>Transporter</item>
-+        <item>Viewer</item>
-+        <item>Logs</item>
-+    </string-array>
-+
-+    <string-array name="sensor2_array_entryvalues">
-+        <item>0</item>
-+        <item>1</item>
-+        <item>2</item>
-+        <item>3</item>
-+        <item>4</item>
-+        <item>5</item>
-+        <item>6</item>
-+        <item>7</item>
-+    </string-array>
-+
-+    <string-array name="sensor_array_entries">
-+        <item>None</item>
-+        <item>Magnetic</item>
-+        <item>Orientation</item>
-+        <item>Gravity</item>
-+    </string-array>
-+
-+    <string-array name="sensor_array_entryvalues">
-+        <item>0</item>
-+        <item>1</item>
-+        <item>2</item>
-+        <item>3</item>
-+    </string-array>
-+
-+    <string-array name="viewer_array_entries">
-+        <item>Logo</item>
-+        <item>Video</item>
-+        <item>Console</item>
-+        <item>Info</item>
-+    </string-array>
-+
-+    <string-array name="viewer_array_entryvalues">
-+        <item>0</item>
-+        <item>1</item>
-+        <item>2</item>
-+        <item>3</item>
-+    </string-array>
-+
- </resources>
-diff --git a/app/src/main/res/xml/preferences.xml b/app/src/main/res/xml/preferences.xml
-index 0a9cb9e..4843c6c 100644
---- a/app/src/main/res/xml/preferences.xml
-+++ b/app/src/main/res/xml/preferences.xml
-@@ -15,21 +15,21 @@
-             android:entryValues="@array/language_array_entryvalues"
-             android:summary="Language used to display to the user"
-             android:title="Display Language"
--            android:defaultValue="FR"/>
-+            android:defaultValue="EN"/>
-         <ListPreference
-             android:key="pref_key_listen_language"
-             android:entries="@array/language_array_entries"
-             android:entryValues="@array/language_array_entryvalues"
-             android:summary="Language used to listen to the user"
-             android:title="Listen Language"
--            android:defaultValue="FR"/>
-+            android:defaultValue="EN"/>
-         <ListPreference
-             android:key="pref_key_speak_language"
-             android:entries="@array/language_array_entries"
-             android:entryValues="@array/language_array_entryvalues"
-             android:summary="Language used to pronounce text to speak"
-             android:title="Speak Language"
--            android:defaultValue="FR"/>
-+            android:defaultValue="EN"/>
-     </PreferenceCategory>
- 
- </PreferenceScreen>
-diff --git a/app/src/main/res/xml/prefmode.xml b/app/src/main/res/xml/prefmode.xml
-index 624ed13..91a942c 100644
---- a/app/src/main/res/xml/prefmode.xml
-+++ b/app/src/main/res/xml/prefmode.xml
-@@ -1,4 +1,25 @@
- <?xml version="1.0" encoding="utf-8"?>
- <PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-+    <ListPreference
-+        android:key="pref_key_sensor2_mode"
-+        android:entries="@array/sensor2_array_entries"
-+        android:entryValues="@array/sensor2_array_entryvalues"
-+        android:summary="Buttons set pre-selected"
-+        android:title="Buttons mode"
-+        android:defaultValue="0"/>
-+    <ListPreference
-+        android:key="pref_key_sensor_mode"
-+        android:entries="@array/sensor_array_entries"
-+        android:entryValues="@array/sensor_array_entryvalues"
-+        android:summary="Sensor selected"
-+        android:title="Sensors mode"
-+        android:defaultValue="0"/>
-+    <ListPreference
-+        android:key="pref_key_viewer_mode"
-+        android:entries="@array/viewer_array_entries"
-+        android:entryValues="@array/viewer_array_entryvalues"
-+        android:summary="Viewer selected"
-+        android:title="Viewer mode"
-+        android:defaultValue="0"/>
- 
- </PreferenceScreen>
-\ No newline at end of file
-diff --git a/gitdiff.txt b/gitdiff.txt
-index 95ac6cb..222c529 100644
---- a/gitdiff.txt
-+++ b/gitdiff.txt
-@@ -1,201 +0,0 @@
--diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--index 40c2665..e08807c 100644
----- a/app/src/main/AndroidManifest.xml
--+++ b/app/src/main/AndroidManifest.xml
--@@ -12,6 +12,8 @@
--     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
--     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
--     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
--+    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
--+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
-- 
--     <uses-feature android:name="android.hardware.camera" android:required="false" />
-- 
--diff --git a/app/src/main/java/net/ddns/mlsoftlaberge/trycorder/TrycorderFragment.java b/app/src/main/java/net/ddns/mlsoftlaberge/trycorder/TrycorderFragment.java
--index cd8b44f..7a758ab 100644
----- a/app/src/main/java/net/ddns/mlsoftlaberge/trycorder/TrycorderFragment.java
--+++ b/app/src/main/java/net/ddns/mlsoftlaberge/trycorder/TrycorderFragment.java
--@@ -15,12 +15,17 @@ import android.hardware.Sensor;
-- import android.hardware.SensorEvent;
-- import android.hardware.SensorEventListener;
-- import android.hardware.SensorManager;
--+import android.location.Criteria;
--+import android.location.Location;
--+import android.location.LocationListener;
--+import android.location.LocationManager;
-- import android.media.AudioManager;
-- import android.media.MediaPlayer;
-- import android.net.Uri;
-- import android.os.Environment;
-- import android.preference.PreferenceManager;
-- import android.provider.MediaStore;
--+import android.provider.Settings;
-- import android.speech.RecognitionListener;
-- import android.speech.RecognizerIntent;
-- import android.speech.SpeechRecognizer;
--@@ -231,7 +236,7 @@ public class TrycorderFragment extends Fragment
--         mAskButton.setOnClickListener(new View.OnClickListener() {
--             @Override
--             public void onClick(View view) {
---                listenandtalk();
--+                snapphoto();
--             }
--         });
-- 
--@@ -849,31 +854,68 @@ public class TrycorderFragment extends Fragment
-- 
--     // ==========================================================================================
-- 
---    public class OriSensorView extends TextView implements SensorEventListener {
--+    public class OriSensorView extends TextView implements SensorEventListener , LocationListener {
-- 
--         private Paint paint;
--         private float position = 0;
-- 
--+        private LocationManager locationManager;
--+        private String locationProvider;
--+        private Location location=null;
--+
--         public OriSensorView(Context context) {
--             super(context);
--             init();
--         }
-- 
--         private void init() {
--+            // initialize the paint object
--             paint = new Paint();
--             paint.setAntiAlias(true);
--             paint.setStrokeWidth(2);
--             paint.setTextSize(25);
--             paint.setStyle(Paint.Style.STROKE);
--             paint.setColor(Color.WHITE);
--+            // initialize the gps service
--+            locationManager = (LocationManager) getActivity().getSystemService(getActivity().LOCATION_SERVICE);
--+            boolean enabled = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER);
--+            // check if enabled and if not send user to the GSP settings
--+            // Better solution would be to display a dialog and suggesting to
--+            // go to the settings
--+            if (!enabled) {
--+                Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
--+                startActivity(intent);
--+            }
--+            // Define the criteria how to select the locatioin provider -> use
--+            // default
--+            Criteria criteria = new Criteria();
--+            locationProvider = locationManager.getBestProvider(criteria, false);
--+            try {
--+                location = locationManager.getLastKnownLocation(locationProvider);
--+                locationManager.requestLocationUpdates(locationProvider, 400, 1, this);
--+            } catch (SecurityException e) {
--+                say("No GPS available");
--+            }
--+            // Initialize the location fields
--+            if (location != null) {
--+                say("Provider " + locationProvider + " has been selected.");
--+            } else {
--+                say("No location available. " + locationProvider);
--+            }
--+
--         }
-- 
--         @Override
--         protected void onDraw(Canvas canvas) {
--             int xPoint = getMeasuredWidth() / 2;
--             int yPoint = getMeasuredHeight() / 2;
--+            if(yPoint>xPoint) {
--+                yPoint=xPoint;
--+            } else {
--+                xPoint=yPoint;
--+            }
-- 
---            float radius = (float) (Math.max(xPoint, yPoint) * 0.6);
--+            float radius = (float) (Math.min(xPoint, yPoint) * 0.9);
--             canvas.drawCircle(xPoint, yPoint, radius, paint);
--             canvas.drawRect(0, 0, getMeasuredWidth(), getMeasuredHeight(), paint);
-- 
--@@ -885,7 +927,18 @@ public class TrycorderFragment extends Fragment
--                     (float) (yPoint - radius
--                             * Math.cos((double) (-position) / 180 * 3.1416)), paint);
-- 
---            canvas.drawText(String.valueOf(position), xPoint, yPoint, paint);
--+            canvas.drawText("ORI: "+String.valueOf(position), xPoint*2.0f, yPoint*2.0f-32.0f, paint);
--+
--+            // draw the longitude and latitude
--+            if(location!=null) {
--+                float lat = (float) (location.getLatitude());
--+                float lng = (float) (location.getLongitude());
--+                canvas.drawText("LAT: "+String.valueOf(lat),xPoint*2.0f,32.0f,paint);
--+                canvas.drawText("LON: "+String.valueOf(lng),xPoint*2.0f,64.0f,paint);
--+            } else {
--+                canvas.drawText("LAT: "+"Not avalaible",xPoint*2.0f,32.0f,paint);
--+                canvas.drawText("LON: "+"Not avalaible",xPoint*2.0f,64.0f,paint);
--+            }
--         }
-- 
--         public void updateData(float position) {
--@@ -905,6 +958,30 @@ public class TrycorderFragment extends Fragment
--             updateData(azimuth);
--         }
-- 
--+        // ============ callbacks for the location listener ===============
--+
--+        @Override
--+        public void onLocationChanged(Location location) {
--+            this.location=location;
--+        }
--+
--+        @Override
--+        public void onStatusChanged(String provider, int status, Bundle extras) {
--+            // TODO Auto-generated method stub
--+        }
--+
--+        @Override
--+        public void onProviderEnabled(String provider) {
--+            say("Enabled new provider " + provider);
--+
--+        }
--+
--+        @Override
--+        public void onProviderDisabled(String provider) {
--+            say("Disabled new provider " + provider);
--+        }
--+
--+
--     }
-- 
--     // ============================================================================
--@@ -1229,6 +1306,7 @@ public class TrycorderFragment extends Fragment
-- 
--     private void snapphoto() {
--         if(mVieweron) {
--+            say("Picture Taken !");
--             mCamera.takePicture(null, null, this);
--         }
--     }
--@@ -1330,7 +1408,11 @@ public class TrycorderFragment extends Fragment
--         if (requestCode == CAPTURE_IMAGE_ACTIVITY_REQUEST_CODE) {
--             if (resultCode == getActivity().RESULT_OK) {
--                 // Image captured and saved to fileUri specified in the Intent
---                say(fileUri.toString());
--+                say("Saved to " + fileUri.toString());
--+                // inform the media manager to scan our new file
--+                Intent intent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);
--+                intent.setData(fileUri);
--+                getActivity().sendBroadcast(intent);
--             } else if (resultCode == getActivity().RESULT_CANCELED) {
--                 // User cancelled the image capture
--                 say("Cancelled Photo");
--@@ -1343,7 +1425,12 @@ public class TrycorderFragment extends Fragment
--         if (requestCode == CAPTURE_VIDEO_ACTIVITY_REQUEST_CODE) {
--             if (resultCode == getActivity().RESULT_OK) {
--                 // Video captured and saved to fileUri specified in the Intent
---                say("" + data.getData());
--+                //say("" + data.getData());
--+                say("Saved to " + fileUri.toString());
--+                // inform the media manager to scan our new file
--+                Intent intent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);
--+                intent.setData(fileUri);
--+                getActivity().sendBroadcast(intent);
--             } else if (resultCode == getActivity().RESULT_CANCELED) {
--                 // User cancelled the video capture
--                 say("Cancelled Video");
